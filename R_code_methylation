BiocManager::install("methylKit")
library(methylKit)
library(VennDiagram)
library(RColorBrewer)
library(reshape2)
library(pheatmap)
library(ggplot2)
library(GenomicFeatures)
library(genomation)
library(ChIPpeakAnno)
library(mygene)


getwd()
setwd("~/Dropbox/EpiGBS/Bismark_out/Bismark_coverage_files/")
file.list = list("A1.bismark.cov","A2.bismark.cov","A3.bismark.cov","A4.bismark.cov","A5.bismark.cov","A6.bismark.cov","A7.bismark.cov","A9.bismark.cov","A10.bismark.cov","G9.bismark.cov","H1.bismark.cov","B1.bismark.cov","B2.bismark.cov","B3.bismark.cov","B4.bismark.cov","B5.bismark.cov","B6.bismark.cov","B7.bismark.cov","B8.bismark.cov",
                 "D5.bismark.cov","D6.bismark.cov","D7.bismark.cov","D8.bismark.cov","D9.bismark.cov","D10.bismark.cov","H8.bismark.cov","H4.bismark.cov","E1.bismark.cov","E2.bismark.cov","E3.bismark.cov","E4.bismark.cov","E5.bismark.cov","E6.bismark.cov","E7.bismark.cov","E8.bismark.cov","E9.bismark.cov","E10.bismark.cov","H9.bismark.cov","H5.bismark.cov",
                 "F1.bismark.cov","F2.bismark.cov","F3.bismark.cov","F4.bismark.cov","F6.bismark.cov","F7.bismark.cov","F8.bismark.cov","F10.bismark.cov","H10.bismark.cov","H6.bismark.cov","G1.bismark.cov","G2.bismark.cov","G3.bismark.cov","G4.bismark.cov","G5.bismark.cov","G6.bismark.cov","G7.bismark.cov","G8.bismark.cov",
                 "B9.bismark.cov","B10.bismark.cov","G10.bismark.cov","H2.bismark.cov","C1.bismark.cov","C2.bismark.cov","C3.bismark.cov","C4.bismark.cov","C5.bismark.cov","C6.bismark.cov","C7.bismark.cov","C8.bismark.cov","C9.bismark.cov","C10.bismark.cov","H7.bismark.cov","H3.bismark.cov","D1.bismark.cov","D2.bismark.cov","D3.bismark.cov","D4.bismark.cov")



All.myobj <- methRead(file.list, sample.id = list("LC1","LC2","LC3","LC4","LC5","LC6","LC7","LC9","LC10","LC11","LC12","LC13","LC14","LC15","LC16","LC17","LC18","LC19","LC20",
                                                  "LF1","LF2","LF3","LF4","LF5","LF6","LF7","LF8","LF9","LF10","LF11","LF12","LF13","LF14","LF15","LF16","LF17","LF18","LF19","LF20",
                                                  "SL3","SL4","SL5","SL6","SL8","SL9","SL10","SL12","SL13","SL14","SL15","SL16","SL17","SL18","SL19","SL20","SL21","SL22",
                                                  "MI1","MI2","MI3","MI4","MI5","MI6","MI7","MI8","MI9","MI10","MI11","MI12","MI13","MI14","MI15","MI16","MI17","MI18","MI19","MI20"), 
                  assembly = "cv3.0", pipeline = "bismarkCoverage",
             treatment = c(
               0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
               1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
               2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
               3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3), 
              context = "CpG")


popStructure <- methRead(file.list, sample.id = list("LC1","LC2","LC3","LC4","LC5","LC6","LC7","LC9","LC10","LC11","LC12","LC13","LC14","LC15","LC16","LC17","LC18","LC19","LC20",
                                                     "LF1","LF2","LF3","LF4","LF5","LF6","LF7","LF8","LF9","LF10","LF11","LF12","LF13","LF14","LF15","LF16","LF17","LF18","LF19","LF20",
                                                     "SL3","SL4","SL5","SL6","SL8","SL9","SL10","SL12","SL13","SL14","SL15","SL16","SL17","SL18","SL19","SL20","SL21","SL22",
                                                     "MI1","MI2","MI3","MI4","MI5","MI6","MI7","MI8","MI9","MI10","MI11","MI12","MI13","MI14","MI15","MI16","MI17","MI18","MI19","MI20"), 
                  assembly = "cv3.0", pipeline = "bismarkCoverage",
                  treatment = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
                                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                  context = "CpG")

file.list.LC.MI = list("A1.bismark.cov","A2.bismark.cov","A3.bismark.cov","A4.bismark.cov","A5.bismark.cov","A6.bismark.cov","A7.bismark.cov","A9.bismark.cov","A10.bismark.cov","G9.bismark.cov","H1.bismark.cov","B1.bismark.cov","B2.bismark.cov","B3.bismark.cov","B4.bismark.cov","B5.bismark.cov","B6.bismark.cov","B7.bismark.cov","B8.bismark.cov","B9.bismark.cov","B10.bismark.cov","G10.bismark.cov","H2.bismark.cov","C1.bismark.cov","C2.bismark.cov","C3.bismark.cov","C4.bismark.cov","C5.bismark.cov","C6.bismark.cov","C7.bismark.cov","C8.bismark.cov","C9.bismark.cov","C10.bismark.cov","H7.bismark.cov","H3.bismark.cov","D1.bismark.cov","D2.bismark.cov","D3.bismark.cov","D4.bismark.cov")

LC_MI_myobj <- methRead(file.list.LC.MI, sample.id = list("LC1","LC2","LC3","LC4","LC5","LC6","LC7","LC9","LC10","LC11","LC12","LC13","LC14","LC15","LC16","LC17","LC18","LC19","LC20","MI1","MI2","MI3","MI4","MI5","MI6","MI7","MI8","MI9","MI10","MI11","MI12","MI13","MI14","MI15","MI16","MI17","MI18","MI19","MI20"), 
                        assembly = "cv3.0", pipeline = "bismarkCoverage",
                        treatment = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                        context = "CpG")


file.list.LC.LF = list("A1.bismark.cov","A2.bismark.cov","A3.bismark.cov","A4.bismark.cov","A5.bismark.cov","A6.bismark.cov","A7.bismark.cov","A9.bismark.cov","A10.bismark.cov","G9.bismark.cov","H1.bismark.cov","B1.bismark.cov","B2.bismark.cov","B3.bismark.cov","B4.bismark.cov","B5.bismark.cov","B6.bismark.cov","B7.bismark.cov","B8.bismark.cov",
                       "D5.bismark.cov","D6.bismark.cov","D7.bismark.cov","D8.bismark.cov","D9.bismark.cov","D10.bismark.cov","H8.bismark.cov","H4.bismark.cov","E1.bismark.cov","E2.bismark.cov","E3.bismark.cov","E4.bismark.cov","E5.bismark.cov","E6.bismark.cov","E7.bismark.cov","E8.bismark.cov","E9.bismark.cov","E10.bismark.cov","H9.bismark.cov","H5.bismark.cov")

LC_LF_myobj <- methRead(file.list.LC.LF, sample.id = list("LC1","LC2","LC3","LC4","LC5","LC6","LC7","LC9","LC10","LC11","LC12","LC13","LC14","LC15","LC16","LC17","LC18","LC19","LC20","LF1","LF2","LF3","LF4","LF5","LF6","LF7","LF8","LF9","LF10","LF11","LF12","LF13","LF14","LF15","LF16","LF17","LF18","LF19","LF20"), 
                        assembly = "cv3.0", pipeline = "bismarkCoverage",
                        treatment = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                        context = "CpG")

file.list.LC.SL = list("A1.bismark.cov","A2.bismark.cov","A3.bismark.cov","A4.bismark.cov","A5.bismark.cov","A6.bismark.cov","A7.bismark.cov","A9.bismark.cov","A10.bismark.cov","G9.bismark.cov","H1.bismark.cov","B1.bismark.cov","B2.bismark.cov","B3.bismark.cov","B4.bismark.cov","B5.bismark.cov","B6.bismark.cov","B7.bismark.cov","B8.bismark.cov","F1.bismark.cov","F2.bismark.cov","F3.bismark.cov","F4.bismark.cov","F6.bismark.cov","F7.bismark.cov","F8.bismark.cov","F10.bismark.cov","H10.bismark.cov","H6.bismark.cov","G1.bismark.cov","G2.bismark.cov","G3.bismark.cov","G4.bismark.cov","G5.bismark.cov","G6.bismark.cov","G7.bismark.cov","G8.bismark.cov")

LC_SL_myobj <- methRead(file.list.LC.SL, sample.id = list("LC1","LC2","LC3","LC4","LC5","LC6","LC7","LC9","LC10","LC11","LC12","LC13","LC14","LC15","LC16","LC17","LC18","LC19","LC20","SL3","SL4","SL5","SL6","SL8","SL9","SL10","SL12","SL13","SL14","SL15","SL16","SL17","SL18","SL19","SL20","SL21","SL22"), 
                        assembly = "cv3.0", pipeline = "bismarkCoverage",
                        treatment = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                        context = "CpG")


file.list.LF.MI = list("D5.bismark.cov","D6.bismark.cov","D7.bismark.cov","D8.bismark.cov","D9.bismark.cov","D10.bismark.cov","H8.bismark.cov","H4.bismark.cov","E1.bismark.cov","E2.bismark.cov","E3.bismark.cov","E4.bismark.cov","E5.bismark.cov","E6.bismark.cov","E7.bismark.cov","E8.bismark.cov","E9.bismark.cov","E10.bismark.cov","H9.bismark.cov","H5.bismark.cov","B9.bismark.cov","B10.bismark.cov","G10.bismark.cov","H2.bismark.cov","C1.bismark.cov","C2.bismark.cov","C3.bismark.cov","C4.bismark.cov","C5.bismark.cov","C6.bismark.cov","C7.bismark.cov","C8.bismark.cov","C9.bismark.cov","C10.bismark.cov","H7.bismark.cov","H3.bismark.cov","D1.bismark.cov","D2.bismark.cov","D3.bismark.cov","D4.bismark.cov")

LF_MI_myobj <- methRead(file.list.LF.MI, sample.id = list("LF1","LF2","LF3","LF4","LF5","LF6","LF7","LF8","LF9","LF10","LF11","LF12","LF13","LF14","LF15","LF16","LF17","LF18","LF19","LF20","MI1","MI2","MI3","MI4","MI5","MI6","MI7","MI8","MI9","MI10","MI11","MI12","MI13","MI14","MI15","MI16","MI17","MI18","MI19","MI20"), 
                        assembly = "cv3.0", pipeline = "bismarkCoverage",
                        treatment = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                        context = "CpG")

file.list.SL.MI = list("F1.bismark.cov","F2.bismark.cov","F3.bismark.cov","F4.bismark.cov","F6.bismark.cov","F7.bismark.cov","F8.bismark.cov","F10.bismark.cov","H10.bismark.cov","H6.bismark.cov","G1.bismark.cov","G2.bismark.cov","G3.bismark.cov","G4.bismark.cov","G5.bismark.cov","G6.bismark.cov","G7.bismark.cov","G8.bismark.cov",
                       "B9.bismark.cov","B10.bismark.cov","G10.bismark.cov","H2.bismark.cov","C1.bismark.cov","C2.bismark.cov","C3.bismark.cov","C4.bismark.cov","C5.bismark.cov","C6.bismark.cov","C7.bismark.cov","C8.bismark.cov","C9.bismark.cov","C10.bismark.cov","H7.bismark.cov","H3.bismark.cov","D1.bismark.cov","D2.bismark.cov","D3.bismark.cov","D4.bismark.cov")

SL_MI_myobj <- methRead(file.list.SL.MI, sample.id = list("SL3","SL4","SL5","SL6","SL8","SL9","SL10","SL12","SL13","SL14","SL15","SL16","SL17","SL18","SL19","SL20","SL21","SL22","MI1","MI2","MI3","MI4","MI5","MI6","MI7","MI8","MI9","MI10","MI11","MI12","MI13","MI14","MI15","MI16","MI17","MI18","MI19","MI20"), 
                        assembly = "cv3.0", pipeline = "bismarkCoverage",
                        treatment = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                        context = "CpG")


file.list.LF.SL = list("D5.bismark.cov","D6.bismark.cov","D7.bismark.cov","D8.bismark.cov","D9.bismark.cov","D10.bismark.cov","H8.bismark.cov","H4.bismark.cov","E1.bismark.cov","E2.bismark.cov","E3.bismark.cov","E4.bismark.cov","E5.bismark.cov","E6.bismark.cov","E7.bismark.cov","E8.bismark.cov","E9.bismark.cov","E10.bismark.cov","H9.bismark.cov","H5.bismark.cov","F1.bismark.cov","F2.bismark.cov","F3.bismark.cov","F4.bismark.cov","F6.bismark.cov","F7.bismark.cov","F8.bismark.cov","F10.bismark.cov","H10.bismark.cov","H6.bismark.cov","G1.bismark.cov","G2.bismark.cov","G3.bismark.cov","G4.bismark.cov","G5.bismark.cov","G6.bismark.cov","G7.bismark.cov","G8.bismark.cov")

LF_SL_myobj <- methRead(file.list.LF.SL, sample.id = list("LF1","LF2","LF3","LF4","LF5","LF6","LF7","LF8","LF9","LF10","LF11","LF12","LF13","LF14","LF15","LF16","LF17","LF18","LF19","LF20","SL3","SL4","SL5","SL6","SL8","SL9","SL10","SL12","SL13","SL14","SL15","SL16","SL17","SL18","SL19","SL20","SL21","SL22"), 
                        assembly = "cv3.0", pipeline = "bismarkCoverage",
                        treatment = c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                        context = "CpG")


#treatment1=LC;Treatment2=MI,Treatment3=LF,Treatment0=SL
setwd("~/Dropbox/EpiGBS/METHYLKIT_FINAL_OUT/")
#save(All.myobj,LC_MI_myobj,LC_SL_myobj,LC_LF_myobj,LF_SL_myobj,LF_MI_myobj,SL_MI_myobj,popStructure,file = "Methylkit_input.RData")
ln = load(file='Methylkit_input.RData')


All_s.pca=unite(All.myobj)
popSt.pca=unite(popStructure)
LC_MI.pca=unite(LC_MI_myobj)
LC_LF.pca=unite(LC_LF_myobj)
LC_SL.pca=unite(LC_SL_myobj)
LF_MI.pca=unite(LF_MI_myobj)
SL_MI.pca=unite(SL_MI_myobj)
LF_SL.pca=unite(LF_SL_myobj)


par(mfrow=c(1,1))
clusterSamples(All_s.pca,plot=TRUE)
clusterSamples(popSt.pca, plot = TRUE)
clusterSamples(LC_MI.pca, plot = TRUE)
clusterSamples(LC_LF.pca, plot = TRUE)
clusterSamples(LC_SL.pca, plot = TRUE)
clusterSamples(LF_MI.pca, plot = TRUE)
clusterSamples(SL_MI.pca, plot = TRUE)
clusterSamples(LF_SL.pca, plot = TRUE)


PCASamples(All_s.pca)
PCASamples(popSt.pca)
PCASamples(LC_MI.pca)
PCASamples(LC_LF.pca)
PCASamples(LC_SL.pca)
PCASamples(LF_MI.pca)
PCASamples(SL_MI.pca)
PCASamples(LF_SL.pca)


All.filtered.myobj <- filterByCoverage(All.myobj, lo.count = 10,lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
popStructur.filtered.myobj <- filterByCoverage(popStructure, lo.count = 10,lo.perc = NULL, hi.count =NULL, hi.perc = 99.9)
LC_MI_myobj.filtered.myobj <- filterByCoverage(LC_MI_myobj, lo.count = 10,lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
LC_LF_myobj.filtered.myobj <- filterByCoverage(LC_LF_myobj, lo.count = 10,lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
LC_SL_myobj.filtered.myobj <- filterByCoverage(LC_SL_myobj, lo.count = 10,lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
LF_MI_myobj.filtered.myobj <- filterByCoverage(LF_MI_myobj, lo.count = 10,lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
SL_MI_myobj.filtered.myobj <- filterByCoverage(SL_MI_myobj, lo.count = 10,lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
LF_SL_myobj.filtered.myobj <- filterByCoverage(LF_SL_myobj, lo.count = 10,lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)

All.filtered.myobj <- normalizeCoverage(All.filtered.myobj)
popStructur.filtered.myobj <- normalizeCoverage(popStructur.filtered.myobj)
LC_MI_myobj.filtered.myobj <- normalizeCoverage(LC_MI_myobj.filtered.myobj)
LC_LF_myobj.filtered.myobj <- normalizeCoverage(LC_LF_myobj.filtered.myobj)
LC_SL_myobj.filtered.myobj <- normalizeCoverage(LC_SL_myobj.filtered.myobj)
LF_MI_myobj.filtered.myobj <- normalizeCoverage(LF_MI_myobj.filtered.myobj)
SL_MI_myobj.filtered.myobj <- normalizeCoverage(SL_MI_myobj.filtered.myobj)
LF_SL_myobj.filtered.myobj <- normalizeCoverage(LF_SL_myobj.filtered.myobj)

All.tiles <- tileMethylCounts(All.filtered.myobj, win.size = 100,step.size = 100)
popStructur.tiles <- tileMethylCounts(popStructur.filtered.myobj, win.size = 100,step.size = 100)
LC_MI_myobj.tiles <- tileMethylCounts(LC_MI_myobj.filtered.myobj, win.size = 100,step.size = 100)
LC_LF_myobj.tiles <- tileMethylCounts(LC_LF_myobj.filtered.myobj, win.size = 100,step.size = 100)
LC_SL_myobj.tiles <- tileMethylCounts(LC_SL_myobj.filtered.myobj, win.size = 100,step.size = 100)
LF_MI_myobj.tiles <- tileMethylCounts(LF_MI_myobj.filtered.myobj, win.size = 100,step.size = 100)
SL_MI_myobj.tiles <- tileMethylCounts(SL_MI_myobj.filtered.myobj, win.size = 100,step.size = 100)
LF_SL_myobj.tiles <- tileMethylCounts(LF_SL_myobj.filtered.myobj, win.size = 100,step.size = 100)

All.Tiles <- unite(All.tiles, min.per.group = 8L)
popStructur.Tiles <- unite(popStructur.tiles, min.per.group = 8L)
LC_MI_myobj.Tiles <- unite(LC_MI_myobj.tiles, min.per.group = 8L)
LC_LF_myobj.Tiles <- unite(LC_LF_myobj.tiles, min.per.group = 8L)
LC_SL_myobj.Tiles <- unite(LC_SL_myobj.tiles, min.per.group = 8L)
LF_MI_myobj.Tiles <- unite(LF_MI_myobj.tiles, min.per.group = 8L)
SL_MI_myobj.Tiles <- unite(SL_MI_myobj.tiles, min.per.group = 8L)
LF_SL_myobj.Tiles <- unite(LF_SL_myobj.tiles, min.per.group = 8L)

clusterSamples(All.Tiles,plot = TRUE)
clusterSamples(popStructur.Tiles, plot = TRUE)
clusterSamples(LC_MI_myobj.Tiles, plot = TRUE)
clusterSamples(LC_LF_myobj.Tiles, plot = TRUE)
clusterSamples(LC_SL_myobj.Tiles, plot = TRUE)
clusterSamples(LF_MI_myobj.Tiles, plot = TRUE)
clusterSamples(SL_MI_myobj.Tiles, plot = TRUE)
clusterSamples(LF_SL_myobj.Tiles, plot = TRUE)


All.pool_diffM_Tiles=calculateDiffMeth(All.Tiles)
popSt.diffMeth_Tiles=calculateDiffMeth(popStructur.Tiles)
LC_MI.diffMeth_Tiles=calculateDiffMeth(LC_MI_myobj.Tiles)
LC_LF.diffMeth_Tiles=calculateDiffMeth(LC_LF_myobj.Tiles)
LC_SL.diffMeth_Tiles=calculateDiffMeth(LC_SL_myobj.Tiles)
LF_MI.diffMeth_Tiles=calculateDiffMeth(LF_MI_myobj.Tiles)
SL_MI.diffMeth_Tiles=calculateDiffMeth(SL_MI_myobj.Tiles)
LF_SL.diffMeth_Tiles=calculateDiffMeth(LF_SL_myobj.Tiles)

dim(All_diffM_Tiles)
dim(LC_MI.diffMeth_Tiles)
dim(LC_LF.diffMeth_Tiles)
dim(LC_SL.diffMeth_Tiles)
dim(LF_MI.diffMeth_Tiles)
dim(SL_MI.diffMeth_Tiles)
dim(LF_SL.diffMeth_Tiles)

PCAout <- PCASamples(All.Tiles,screeplot=FALSE, adj.lim=c(0.04,0.1),
           scale=T,center=T,comp=c(1,2),transpose=T,sd.filter=T,
           sd.threshold=.57,filterByQuantile=T,obj.return=T)

PCA_sdev <- PCAout$sdev
PCA_coord <- as.data.frame(PCAout$x)

PCA_sig <- PCA_sdev/(sum(PCA_sdev))
head(PCA_sig) #Significance of each Principle component
sum(PCA_sig) # Will equal 1

samples_described <- read.csv("~/Dropbox/EpiGBS/samples_described.csv")

Site <- as.factor(samples_described$Site)

colors <- rep(c("blue3","orange","forestgreen","orchid4"))
points <- c(21,22,23,24)
par(mar=c(5,6,4,5)+0.1, xpd=TRUE)

plot(PCA_coord[,1] , PCA_coord[,2],type = "p",pch=points[Site],col=c("darkgrey"), bg=colors[Site],xlab= "PC1 (80.4%)", ylab ="PC2 (19.6%)", cex=2,cex.axis=2,cex.lab = 2,xlim=c(-2,5),ylim=c(-1.5,1.5))
legend("topright", inset=c(-.225,-.05), legend=levels(Site), pch=points, cex =1.9, col=c("darkgrey"),pt.bg = colors,  ncol=1, bty = "n")
ordiellipse(PCA_coord,choices=c(1,2),Site, col.axis = 'blue', col.lab = 'red',label=F,cex=1.5,lwd=2.5,kind="sd",border=c("blue3","orange","forestgreen","orchid4"),col=c("blue3","orange","forestgreen","orchid4"),alpha=20,draw = "polygon")

##Run adonis on percent methylation data
input <- percMethylation(All.Tiles,rowids = T)
head(input)
adonis2(t(input)~Site,na.rm=T,method="euclidean",permutations = 100000)  

#write.csv(All.pool_diffM_Tiles, "All_Diff_100_tile.csv",quote=F)
#write.csv(popSt.diffMeth_Tiles, "LCSL_LFMI_Diff_100_tile.csv",quote=F)
#write.csv(LC_MI.diffMeth_Tiles, "LC_MI_Diff_100_tile.csv",quote=F)
#write.csv(LC_LF.diffMeth_Tiles, "LC_SL_Diff_100_tile.csv",quote=F)
#write.csv(LC_SL.diffMeth_Tiles, "LC_LF_Diff_100_tile.csv",quote=F)
#write.csv(LF_MI.diffMeth_Tiles, "LF_MI_Diff_100_tile.csv",quote=F)
#write.csv(SL_MI.diffMeth_Tiles, "LF_SL_Diff_100_tile.csv",quote=F)
#write.csv(LF_SL.diffMeth_Tiles, "SL_MI_Diff_100_tile.csv",quote=F)
#
setwd("~/Dropbox/EpiGBS/METHYLKIT_FINAL_OUT/")
#save(All.pool_diffM_Tiles,popSt.diffMeth_Tiles,LC_MI.diffMeth_Tiles,LC_LF.diffMeth_Tiles,LC_SL.diffMeth_Tiles,LF_MI.diffMeth_Tiles,SL_MI.diffMeth_Tiles,LF_SL.diffMeth_Tiles,file = "Methylkit_diffMeth_output.RData")
ln = load(file="Methylkit_diffMeth_output.RData")

All.15_sig = getMethylDiff(All.pool_diffM_Tiles,difference=15,qvalue=0.05)
dim(All.15_sig)
#0 DMRs
popSt.15_sig =getMethylDiff(popSt.diffMeth_Tiles,difference=15,qvalue=0.05)
dim(popSt.15_sig)
#282 DMRs
LC_MI.15_sig =getMethylDiff(LC_MI.diffMeth_Tiles,difference=15,qvalue=0.05)
dim(LC_MI.15_sig)
#103 DMRs
LC_LF.15_sig =getMethylDiff(LC_LF.diffMeth_Tiles,difference=15,qvalue=0.05)
dim(LC_LF.15_sig)
#60 DMRs
LC_SL.15_sig =getMethylDiff(LC_SL.diffMeth_Tiles,difference=15,qvalue=0.05)
dim(LC_SL.15_sig)
#54 DMRs
LF_MI.15_sig =getMethylDiff(LF_MI.diffMeth_Tiles,difference=15,qvalue=0.05)
dim(LF_MI.15_sig)
#130 DMRs
SL_MI.15_sig =getMethylDiff(SL_MI.diffMeth_Tiles,difference=15,qvalue=0.05)
dim(SL_MI.15_sig)
#48 DMRs
LF_SL.15_sig =getMethylDiff(LF_SL.diffMeth_Tiles,difference=15,qvalue=0.05)
dim(LF_SL.15_sig)
#38 DMRs

DMRs <- c(0,282,103,60,54,130,48,38)
#715 DMRs identified in total

All.nonsig = getMethylDiff(All.pool_diffM_Tiles,difference=0,qvalue=1)
dim(All.nonsig)


popSt.nonsig =getMethylDiff(popSt.diffMeth_Tiles,difference=0,qvalue=1)
dim(popSt.nonsig)
#7172 Regions
LC_MI.nonsig =getMethylDiff(LC_MI.diffMeth_Tiles,difference=0,qvalue=1)
dim(LC_MI.nonsig)
#2134 Regions
LC_LF.nonsig =getMethylDiff(LC_LF.diffMeth_Tiles,difference=0,qvalue=1)
dim(LC_LF.nonsig)
#1588 Regions
LC_SL.nonsig =getMethylDiff(LC_SL.diffMeth_Tiles,difference=0,qvalue=1)
dim(LC_SL.nonsig)
#917 Regions
LF_MI.nonsig =getMethylDiff(LF_MI.diffMeth_Tiles,difference=0,qvalue=1)
dim(LF_MI.nonsig)
#2972 Regions
SL_MI.nonsig =getMethylDiff(SL_MI.diffMeth_Tiles,difference=0,qvalue=1)
dim(SL_MI.nonsig)
#1289 Regions
LF_SL.nonsig =getMethylDiff(LF_SL.diffMeth_Tiles,difference=0,qvalue=1)
dim(LF_SL.nonsig)
#1068 Regions


PopSt_sig <- as(popSt.15_sig,"GRanges")
LC_MI_sig <- as(LC_MI.15_sig,"GRanges")
LC_LF_sig <- as(LC_LF.15_sig,"GRanges")
LC_SL_sig <- as(LC_SL.15_sig,"GRanges")
LF_MI_sig <- as(LF_MI.15_sig,"GRanges")
LF_SL_sig <- as(SL_MI.15_sig,"GRanges")
SL_MI_sig <- as(LF_SL.15_sig,"GRanges")


LC_MI_nonsig <- as(LC_MI.nonsig,"GRanges")
LC_LF_nonsig <- as(LC_LF.nonsig,"GRanges")
LC_SL_nonsig <- as(LC_SL.nonsig,"GRanges")
LF_MI_nonsig <- as(LF_MI.nonsig,"GRanges")
LF_SL_nonsig <- as(SL_MI.nonsig,"GRanges")
SL_MI_nonsig <- as(LF_SL.nonsig,"GRanges")


LCMI_NS <- getData(LC_MI.nonsig)
LCLF_NS <- getData(LC_LF.nonsig)
LCSL_NS <- getData(LC_SL.nonsig)
LFMI_NS <- getData(LF_MI.nonsig)
LFSL_NS <- getData(LF_SL.nonsig)
SLMI_NS <- getData(SL_MI.nonsig)


LCMI_NS$Loci <- paste(LCMI_NS$chr,LCMI_NS$start,LCMI_NS$end,sep=".")
LCLF_NS$Loci <- paste(LCLF_NS$chr,LCLF_NS$start,LCLF_NS$end,sep=".")
LCSL_NS$Loci <- paste(LCSL_NS$chr,LCSL_NS$start,LCSL_NS$end,sep=".")
LFMI_NS$Loci <- paste(LFMI_NS$chr,LFMI_NS$start,LFMI_NS$end,sep=".")
LFSL_NS$Loci <- paste(LFSL_NS$chr,LFSL_NS$start,LFSL_NS$end,sep=".")
SLMI_NS$Loci <- paste(SLMI_NS$chr,SLMI_NS$start,SLMI_NS$end,sep=".")

MI_NS_all <- merge(LCMI_NS,LFMI_NS,by="Loci",all=T)
MI_NS_all2 <- merge(MI_NS_all,SLMI_NS,by="Loci",all=T)
dim(MI_NS_all2)
#3639
LC_NS_all <- merge(LCMI_NS,LCLF_NS,by="Loci",all=T)
LC_NS_all2 <- merge(LC_NS_all,LCSL_NS,by="Loci",all=T)
dim(LC_NS_all2)
#2176
LF_NS_all <- merge(LFMI_NS,LCLF_NS,by="Loci",all=T)
LF_NS_all2 <- merge(LF_NS_all,LFSL_NS,by="Loci",all=T)
dim(LF_NS_all2)
#3007
SL_NS_all <- merge(LCSL_NS,LFSL_NS,by="Loci",all=T)
SL_NS_all2 <- merge(SL_NS_all,SLMI_NS,by="Loci",all=T)
All_NS <- merge(MI_NS_all2,LC_NS_all2,by="Loci",all=T)
colnames(All_NS) <- c("Loci","chr.1","start.1","end.1","strand.1","pvalue.1","qvalue.1","LCMI.meth.diff.1",
                   "chr.2","start.2","end.2","strand.2","pvalue.2","qvalue.2","LFMI.meth.diff.2","chr.3" ,       
                   "start.3","end.3","strand.3","pvalue.3","qvalue.3","SLMI.meth.diff.3","chr.4","start.4" ,   
                   "end.4","strand.4","pvalue.4","qvalue.4","LCMI.meth.diff.4","chr.5","start.5","end.5",  
                   "strand.5","pvalue.5","qvalue.5","LCLF.meth.diff.5","chr.6","start.6","end.6","strand.6",     
                   "pvalue.6","qvalue.6","LCSL.meth.diff.6"  )
All_NS2 <- merge(All_NS,LF_NS_all2,by="Loci",all=T)
All_NS2 <- merge(All_NS2,SL_NS_all2,by="Loci",all=T)
colnames(All_NS2)
colnames(All_NS2) <- c("Loci","chr.1","start.1","end.1","strand.1","pvalue.1","qvalue.1","LCMI.meth.diff.1",
                       "chr.2","start.2","end.2","strand.2","pvalue.2","qvalue.2","LFMI.meth.diff.2","chr.3" ,       
                       "start.3","end.3","strand.3","pvalue.3","qvalue.3","SLMI.meth.diff.3","chr.4","start.4" ,   
                       "end.4","strand.4","pvalue.4","qvalue.4","LCMI.meth.diff.4","chr.5","start.5","end.5",  
                       "strand.5","pvalue.5","qvalue.5","LCLF.meth.diff.5","chr.6","start.6","end.6","strand.6",     
                       "pvalue.6","qvalue.6","LCSL.meth.diff.6",
                       "chr.7","start.7","end.7","strand.7","pvalue.7","qvalue.7","LFMI.meth.diff",
                       "chr.8","start.8","end.8","strand.8","pvalue.8","qvalue.8","LCLF.meth.diff","chr.9" ,       
                       "start.9","end.9","strand.9","pvalue.9","qvalue.9","LFSL.meth.diff","chr.10","start.10" ,   
                       "end.10","strand.10","pvalue.10","qvalue.1O","LCSL.meth.diff","chr.11","start.11","end.11",  
                       "strand.11","pvalue.11","qvalue.11","LFSL.meth.diff","chr.12","start.12","end.12","strand.12",     
                       "pvalue.12","qvalue.12","SLMI.meth.diff")
dim(All_NS2)
#3643 total Loci
colnames(All_NS2)
All_NS3 <- All_NS2[,c(1,8,15,22,36,43,64)]
head(All_NS3)
All_NS3_keep <- complete.cases(All_NS3)
All_NS4 <- All_NS3[All_NS3_keep,]
dim(All_NS4)
library(limma)

plotMDS(All_NS4[,c(2:7)])

All_s.perc <- percMethylation(All_s.pca)
popSt.perc <- percMethylation(popSt.pca)
LC_MI.perc <- percMethylation(LC_MI.pca)
LC_LF.perc <- percMethylation(LC_LF.pca)
LC_SL.perc <- percMethylation(LC_SL.pca)
LF_MI.perc <- percMethylation(LF_MI.pca)
SL_MI.perc <- percMethylation(SL_MI.pca)
LF_SL.perc <- percMethylation(LF_SL.pca)

head(All_s.perc)
head(popSt.perc)
head(LC_MI.perc)
head(LC_LF.perc)
head(LC_SL.perc)
head(LF_MI.perc)
head(SL_MI.perc)
head(LF_SL.perc)


dim(LCMI_NS)
#2134
dim(LCLF_NS)
#1588
dim(LCSL_NS)
#917
dim(LFMI_NS)
#2972
dim(LFSL_NS)
#1068
dim(SLMI_NS)
#1289

All_vd <- venn.diagram(x = list("MI (n=3,639)" = MI_NS_all2$Loci,
                                   "LC (n=2,176)" = LC_NS_all2$Loci,
                                   "LF (n=3,007)" = LF_NS_all2$Loci,
                                   "SL (n=1,311)" = SL_NS_all2$Loci),
                          fill = brewer.pal(3, "Set2")[1:4], filename = NULL, cex= 2,cat.cex=1.5)


All_olap <- calculate.overlap(x = list("MI (n=3,639)" = MI_NS_all2$Loci,
                                       "LC (n=2,176)" = LC_NS_all2$Loci,
                                       "LF (n=3,007)" = LF_NS_all2$Loci,
                                       "SL (n=1,311)" = SL_NS_all2$Loci))
shared <- (All_olap$a6)
head(shared)

head(All_NS2)
row.names(All_NS2) <- All_NS2$Loci
All_NS3 <- All_NS2[shared,]
head(All_NS3)

LF_All_vd <- venn.diagram(x = list("LF_MI (n=2,972)" = LFMI_NS$Loci,
                                   "LF_SL (n=1,068)" = LFSL_NS$Loci,
                                   "LF_LC (n=1,588)" = LCLF_NS$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

LC_All_vd <- venn.diagram(x = list("LC_MI (n=2,134)" = LCMI_NS$Loci,
                                   "LC_LF (n=1,588)" = LCLF_NS$Loci,
                                   "LC_SL (n=917)" = LCSL_NS$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

MI_All_vd <- venn.diagram(x = list("MI_LC (n=2,134)" = LCMI_NS$Loci,
                                   "MI_LF (n=2,972)" = LFMI_NS$Loci,
                                   "MI_SL (n=1,289)" = SLMI_NS$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

SL_All_vd <- venn.diagram(x = list("SL_LC (n=635)" = LCSL_NS$Loci,
                                   "SL_LF (n=790)" = LFSL_NS$Loci,
                                   "SL_MI (n=951)" = SLMI_NS$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

grid.newpage();
grid.draw(LF_All_vd)
grid.newpage();
grid.draw(LC_All_vd)
grid.newpage();
grid.draw(MI_All_vd)
grid.newpage();
grid.draw(SL_All_vd)
grid.newpage();
grid.draw(All_vd)

Pop_Sig <- getData(popSt.15_sig )
LCMI_Sig <- getData(LC_MI.15_sig)
LCLF_Sig <- getData(LC_LF.15_sig)
LCSL_Sig <- getData(LC_SL.15_sig)
LFMI_Sig <- getData(LF_MI.15_sig)
LFSL_Sig <- getData(LF_SL.15_sig)
SLMI_Sig <- getData(SL_MI.15_sig)

Pop_Sig$Loci  <- paste(Pop_Sig$chr,Pop_Sig$start,Pop_Sig$end,sep=".")
LCMI_Sig$Loci <- paste(LCMI_Sig$chr,LCMI_Sig$start,LCMI_Sig$end,sep=".")
LCLF_Sig$Loci <- paste(LCLF_Sig$chr,LCLF_Sig$start,LCLF_Sig$end,sep=".")
LCSL_Sig$Loci <- paste(LCSL_Sig$chr,LCSL_Sig$start,LCSL_Sig$end,sep=".")
LFMI_Sig$Loci <- paste(LFMI_Sig$chr,LFMI_Sig$start,LFMI_Sig$end,sep=".")
LFSL_Sig$Loci <- paste(LFSL_Sig$chr,LFSL_Sig$start,LFSL_Sig$end,sep=".")
SLMI_Sig$Loci <- paste(SLMI_Sig$chr,SLMI_Sig$start,SLMI_Sig$end,sep=".")

MI_all <- merge(LCMI_Sig,LFMI_Sig,by="Loci",all=T)
MI_all2 <- merge(MI_all,SLMI_Sig,by="Loci",all=T)
dim(MI_all2)
dim(MI_NS_all2)
#253 DMRs out of  3639 Loci
#100*(253/3639)
#6.952% of loci DMR

LC_all <- merge(LCMI_Sig,LCLF_Sig,by="Loci",all=T)
LC_all2 <- merge(LC_all,LCSL_Sig,by="Loci",all=T)
dim(LC_all2)
dim(LC_NS_all2)
test <- complete.cases(LC_all2)
table(test)
#174 DMRs out of 2176 Loci
#100*(174/2176)
#7.996% of loci DMR

LF_all <- merge(LFMI_Sig,LCLF_Sig,by="Loci",all=T)
LF_all2 <- merge(LF_all,LFSL_Sig,by="Loci",all=T)
dim(LF_all2)
test <- complete.cases(LF_all2)
table(test)
dim(LF_NS_all2)
#201 DMRs out of 3007 Loci
#100*(201/3007)
#6.684% of loci DMR

SL_all <- merge(LCSL_Sig,LFSL_Sig,by="Loci",all=T)
SL_all2 <- merge(SL_all,SLMI_Sig,by="Loci",all=T)
dim(SL_all2)
test <- complete.cases(SL_all2)
table(test)
dim(SL_NS_all2)
#111 out of 1311 Loci
#100*(111/1311)
#8.467% of loci DMR


All_DMRs <- merge(MI_all2,LC_all2,by="Loci",all=T)
colnames(All_DMRs) <- c("Loci","chr.1","start.1","end.1","strand.1","pvalue.1","qvalue.1","meth.diff.1",
                      "chr.2","start.2","end.2","strand.2","pvalue.2","qvalue.2","meth.diff.2","chr.3" ,       
                      "start.3","end.3","strand.3","pvalue.3","qvalue.3","meth.diff.3","chr.4","start.4" ,   
                      "end.4","strand.4","pvalue.4","qvalue.4","meth.diff.4","chr.5","start.5","end.5",  
                      "strand.5","pvalue.5","qvalue.5","meth.diff.5","chr.6","start.6","end.6","strand.6",     
                      "pvalue.6","qvalue.6","meth.diff.6")
All_DMRs2 <- merge(All_DMRs,LF_all2,by="Loci",all=T)
All_DMRs2 <- merge(All_DMRs2,SL_all2,by="Loci",all=T)
dim(All_DMRs2)
#312 DMRs in total
#3646 Loci included
#100*(312/3646)
#8.557% of Loci Diffentially methylated

head(All_DMRs2)

All_vd <- venn.diagram(x = list("MI (n=253)" = MI_all2$Loci,
                                "LC (n=174)" = LC_all2$Loci,
                                "LF (n=201)" = LF_all2$Loci,
                                "SL (n=111)" = SL_all2$Loci),
                       fill = brewer.pal(3, "Set2")[1:4], filename = NULL, cex= 2,cat.cex=1.5)

LF_All_vd <- venn.diagram(x = list("LF_MI (n=130)" = LFMI_Sig$Loci,
                                   "LF_SL (n=38)" = LFSL_Sig$Loci,
                                   "LF_LC (n=60)" = LCLF_Sig$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

LC_All_vd <- venn.diagram(x = list("LC_MI (n=103)" = LCMI_Sig$Loci,
                                   "LC_LF (n=60)" = LCLF_Sig$Loci,
                                   "LC_SL (n=54)" = LCSL_Sig$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

MI_All_vd <- venn.diagram(x = list("MI_LC (n=103)" = LCMI_Sig$Loci,
                                   "MI_LF (n=130)" = LFMI_Sig$Loci,
                                   "MI_SL (n=48)" = SLMI_Sig$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

SL_All_vd <- venn.diagram(x = list("SL_LC (n=54)" = LCSL_Sig$Loci,
                                   "SL_LF (n=38)" = LFSL_Sig$Loci,
                                   "SL_MI (n=48)" = SLMI_Sig$Loci),
                          fill = brewer.pal(3, "Set2")[1:3], filename = NULL, cex= 2,cat.cex=1.5)

grid.newpage();
grid.draw(LF_All_vd)
grid.newpage();
grid.draw(LC_All_vd)
grid.newpage();
grid.draw(MI_All_vd)
grid.newpage();
grid.draw(SL_All_vd)
grid.newpage();
grid.draw(All_vd)

#write.csv(popSt.nonsig, "popSt.nonsig_100_tile.csv",quote=F)
#write.csv(LC_MI.nonsig, "LC_MI.nonsig_100_tile.csv",quote=F)
#write.csv(LC_LF.nonsig, "LC_LF.nonsig_100_tile.csv",quote=F)
#write.csv(LC_SL.nonsig, "LC_SL.nonsig_100_tile.csv",quote=F)
#write.csv(LF_MI.nonsig, "LF_MI.nonsig_100_tile.csv",quote=F)
#write.csv(SL_MI.nonsig, "SL_MI.nonsig_100_tile.csv",quote=F)
#write.csv(LF_SL.nonsig, "LF_SL.nonsig_100_tile.csv",quote=F)

LCMI_hypo_keep <- LCMI_Sig$meth.diff <=0
LCLF_hypo_keep <- LCLF_Sig$meth.diff <=0
LCSL_hypo_keep <- LCSL_Sig$meth.diff <=0
LFMI_hypo_keep <- LFMI_Sig$meth.diff <=0
LFSL_hypo_keep <- LFSL_Sig$meth.diff <=0
SLMI_hypo_keep <- SLMI_Sig$meth.diff <=0

LCMI_hypr_keep <- LCMI_Sig$meth.diff >0
LCLF_hypr_keep <- LCLF_Sig$meth.diff >0
LCSL_hypr_keep <- LCSL_Sig$meth.diff >0
LFMI_hypr_keep <- LFMI_Sig$meth.diff >0
LFSL_hypr_keep <- LFSL_Sig$meth.diff >0
SLMI_hypr_keep <- SLMI_Sig$meth.diff >0

LCMI_hypo_sig <- LCMI_Sig[LCMI_hypo_keep,]
LCLF_hypo_sig <- LCLF_Sig[LCLF_hypo_keep,]
LCSL_hypo_sig <- LCSL_Sig[LCSL_hypo_keep,]
LFMI_hypo_sig <- LFMI_Sig[LFMI_hypo_keep,]
LFSL_hypo_sig <- LFSL_Sig[LFSL_hypo_keep,]
SLMI_hypo_sig <- SLMI_Sig[SLMI_hypo_keep,]

MI_hypo <- merge(LCMI_hypo_sig,LFMI_hypo_sig,by="Loci",all=T)
MI_hypo2 <- merge(MI_hypo,SLMI_hypo_sig,by="Loci",all=T)
dim(MI_hypo2)
dim(MI_all2)
#98 DMRs out of 253 significant Loci were hypomethylated
#100*(98/253)
#38.73518% of DMRs are hypomethylated

LC_hypo <- merge(LCMI_hypo_sig,LCLF_hypo_sig,by="Loci",all=T)
LC_hypo2 <- merge(LC_hypo,LCSL_hypo_sig,by="Loci",all=T)
dim(LC_hypo2)
dim(LC_all2)
#58 DMRs out of 147 significant Loci were hypomethylated
#100*(58/147)
#39.45578% of  DMRs are hypomethylated

LF_hypo <- merge(LFMI_hypo_sig,LCLF_hypo_sig,by="Loci",all=T)
LF_hypo2 <- merge(LF_hypo,LFSL_hypo_sig,by="Loci",all=T)
dim(LF_hypo2)
dim(LF_all2)
#87 DMRs out of 201 Loci
#100*(87/201)
#43.28358% of  DMRs are hypomethylated

SL_hypo <- merge(LCSL_hypo_sig,LFSL_hypo_sig,by="Loci",all=T)
SL_hypo2 <- merge(SL_hypo,SLMI_hypo_sig,by="Loci",all=T)
dim(SL_hypo2)
dim(SL_all2)
#53 out of 111 Loci
#100*(53/111)
#47.74775% of  DMRs are hypomethylated


LCMI_hypr_sig <- LCMI_Sig[LCMI_hypr_keep,]
LCLF_hypr_sig <- LCLF_Sig[LCLF_hypr_keep,]
LCSL_hypr_sig <- LCSL_Sig[LCSL_hypr_keep,]
LFMI_hypr_sig <- LFMI_Sig[LFMI_hypr_keep,]
LFSL_hypr_sig <- LFSL_Sig[LFSL_hypr_keep,]
SLMI_hypr_sig <- SLMI_Sig[SLMI_hypr_keep,]

MI_hypr <- merge(LCMI_hypr_sig,LFMI_hypr_sig,by="Loci",all=T)
MI_hypr2 <- merge(MI_hypr,SLMI_hypr_sig,by="Loci",all=T)
dim(MI_hypr2)
dim(MI_NS_all2)
#156 DMRs out of 253 significant Loci were hyprmethylated
#100*(156/253)
#61.6% of DMRs are hyprmethylated

LC_hypr <- merge(LCMI_hypr_sig,LCLF_hypr_sig,by="Loci",all=T)
LC_hypr2 <- merge(LC_hypr,LCSL_hypr_sig,by="Loci",all=T)
dim(LC_hypr2)
dim(LC_all2)
#117 DMRs out of 147 significant Loci were hyprmethylated
#100*(117/147)
#79.59184% of  DMRs are hyprmethylated

LF_hypr <- merge(LFMI_hypr_sig,LCLF_hypr_sig,by="Loci",all=T)
LF_hypr2 <- merge(LF_hypr,LFSL_hypr_sig,by="Loci",all=T)
dim(LF_hypr2)
dim(LF_all2)
#136 DMRs out of 201 Loci
#100*(136/201)
#67.66169% of  DMRs are hyprmethylated

SL_hypr <- merge(LCSL_hypr_sig,LFSL_hypr_sig,by="Loci",all=T)
SL_hypr2 <- merge(SL_hypr,SLMI_hypr_sig,by="Loci",all=T)
dim(SL_hypr2)
dim(SL_all2)
#77 out of 111 Loci
#100*(77/111)
#69.36937% of  DMRs are hyprmethylated


colnames(All_DMRs2) <- c("Loci","chr.1","start.1","end.1","strand.1","pvalue.1","qvalue.1","LCMI.meth.diff.1",
                         "chr.2","start.2","end.2","strand.2","pvalue.2","qvalue.2","LFMI.meth.diff.2","chr.3" ,       
                         "start.3","end.3","strand.3","pvalue.3","qvalue.3","SLMI.meth.diff.3","chr.4","start.4" ,   
                         "end.4","strand.4","pvalue.4","qvalue.4","LCMI.meth.diff.4","chr.5","start.5","end.5",  
                         "strand.5","pvalue.5","qvalue.5","LCLF.meth.diff.5","chr.6","start.6","end.6","strand.6",     
                         "pvalue.6","qvalue.6","LCSL.meth.diff.6",
                         "chr.7","start.7","end.7","strand.7","pvalue.7","qvalue.7","LFMI.meth.diff",
                         "chr.8","start.8","end.8","strand.8","pvalue.8","qvalue.8","LCLF.meth.diff","chr.9" ,       
                         "start.9","end.9","strand.9","pvalue.9","qvalue.9","LFSL.meth.diff","chr.10","start.10" ,   
                         "end.10","strand.10","pvalue.10","qvalue.1O","LCSL.meth.diff","chr.11","start.11","end.11",  
                         "strand.11","pvalue.11","qvalue.11","LFSL.meth.diff","chr.12","start.12","end.12","strand.12",     
                         "pvalue.12","qvalue.12","SLMI.meth.diff")


head(All_DMRs2)
All_DMR_final <- All_DMRs2[,c(8,15,22,36,43,64)]
head(All_DMR_final)
All_DMR_final <- ifelse(All_DMR_final < 0,-1,1)
All_DMR_final[is.na(All_DMR_final)] <- 0
colnames(All_DMR_final) <- c("LCMI","LFMI","SLMI","LCLF","LCSL","LFSL")
library(limma)
par(mfrow=c(2,2))
vennDiagram(All_DMR_final[,c(1:3)], include=c("up","down"), names=NULL, mar=rep(1,4), cex=c(1.5,1,0.7), lwd=1,
            circle.col=c( "#66C2A5","#FC8D62","#8DA0CB"), counts.col=NULL, show.include=NULL,main="Vermillion Bay")
vennDiagram(All_DMR_final[,c(1,4,5)], include=c("up","down"), names=NULL, mar=rep(1,4), cex=c(1.5,1,0.7), lwd=1,
            circle.col=c("#66C2A5","#E78AC3","#A6D854" ), counts.col=NULL, show.include=NULL,main="Lake Calcasieu")
vennDiagram(All_DMR_final[,c(2,4,6)], include=c("up","down"), names=NULL, mar=rep(1,4), cex=c(1.5,1,0.7), lwd=1,
            circle.col=c("#FC8D62","#E78AC3","#FFD92F"), counts.col=NULL, show.include=NULL,main="Lake Fortuna")
vennDiagram(All_DMR_final[,c(3,5,6)], include=c("up","down"), names=NULL, mar=rep(1,4), cex=c(1.5,1,0.7), lwd=1,
            circle.col=c("#8DA0CB","#A6D854", "#FFD92F"), counts.col=NULL, show.include=NULL,main="Sister Lake")


Popsi_per_chr = diffMethPerChr(popSt.diffMeth_Tiles,plot = TRUE,qvalue.cutoff = 0.05, meth.cutoff =15)
LC_MI_per_chr = diffMethPerChr(LC_MI.diffMeth_Tiles,plot = TRUE,qvalue.cutoff = 0.05, meth.cutoff =15)
LC_LF_per_chr = diffMethPerChr(LC_LF.diffMeth_Tiles,plot = TRUE,qvalue.cutoff = 0.05, meth.cutoff =15)
LC_SL_per_chr = diffMethPerChr(LC_SL.diffMeth_Tiles,plot = TRUE,qvalue.cutoff = 0.05, meth.cutoff =15)
LF_MI_per_chr = diffMethPerChr(LF_MI.diffMeth_Tiles,plot = TRUE,qvalue.cutoff = 0.05, meth.cutoff =15)
LF_SL_per_chr = diffMethPerChr(SL_MI.diffMeth_Tiles,plot = TRUE,qvalue.cutoff = 0.05, meth.cutoff =15)
SL_MI_per_chr = diffMethPerChr(LF_SL.diffMeth_Tiles,plot = TRUE,qvalue.cutoff = 0.05, meth.cutoff =15)

library(GenomicFeatures)
library(rtracklayer)
#Use the GFF file available from NCBI GCF_002022765.2_C_virginica-3.0_genomic.gff
#Cvirginica_txDB <- makeTxDbFromGFF("~/Dropbox/CVirginica_genome/GCF_002022765.2_C_virginica-3.0_genomic.gff")
#saveDb(Cvirginica_txDB, file="Cvirginica_txDB.sqlite")
Cvirginica_txDB <- makeTxDbFromGFF("~/Dropbox/CVirginica_genome/GCF_002022765.2_C_virginica-3.0_genomic.gff")
Cvirginica_txDB <- loadDb("Cvirginica_txDB.sqlite")
CVirginica_ref <-asBED(Cvirginica_txDB)


PopSt_nonsig_achr <-assignChromosomeRegion(PopSt_nonsig, nucleotideLevel=FALSE, 
                                      precedence=c("Promoters", "immediateDownstream", 
                                                   "fiveUTRs", "threeUTRs", 
                                                   "Exons", "Introns"), 
                                      TxDb=Cvirginica_txDB)

pie(PopSt_nonsig_achr$percentage, las=3)

pdf(file = "Popsig_methylation barplot_percent_nonsig.pdf", width = 12, height = 9);
Z <- barplot(PopSt_nonsig_achr$percentage, las=3,ylim=c(0,75),  main="Population_K3 Methylation Distribution")
text(x = Z, y = PopSt_nonsig_achr$percentage, label = PopSt_nonsig_achr$percentage, pos = 3, cex = 0.8, col = "red")

dev.off()


PopSt_sig_achr <-assignChromosomeRegion(PopSt_sig, nucleotideLevel=T, 
                                        precedence=c("Promoters", "immediateDownstream", 
                                                     "fiveUTRs", "threeUTRs", 
                                                     "Exons", "Introns"), 
                                        TxDb=Cvirginica_txDB)

pdf(file = "Popsig_methylation barplot_percent_sig.pdf", width = 12, height = 9);
Z <- barplot(PopSt_sig_achr$percentage, las=3,ylim=c(0,75),  main="Population_K3 Significantly Diff Methylated")
text(x = Z, y = round(PopSt_sig_achr$percentage,digits = 3), label = PopSt_sig_achr$percentage, pos = 3, cex = 0.8, col = "red")

dev.off()


par(mfrow=c(1,2))
par(margin(t=1,r=1,b=2,l=1))
PopSt_sig_achr_per<- PopSt_sig_achr$percentage
head(PopSt_sig_achr_per)
PopSt_sig_achr_number_tiles <- (PopSt_sig_achr_per/100)*24

Names <- names(PopSt_sig_achr_per)
PopSt_sig_pct <- round(PopSt_sig_achr_per, digits = 2)
PopSt_nonsig_achr_per<- PopSt_nonsig_achr$percentage
Names <- names(PopSt_nonsig_achr_per)
PopSt_nonsig_pct <- round(PopSt_nonsig_achr_per, digits = 2)
PopSt_nonsig_achr_number_tiles <- (PopSt_nonsig_achr_per/100)*1917

Z <- barplot(PopSt_nonsig_pct, las=3,ylim=c(0,45),  main="Population_K3 Methylation Distribution",cex.names = 0.5,ylab = "Frequency")
text(x = Z, y = PopSt_nonsig_pct, label = PopSt_nonsig_achr_number_tiles, pos = 3, cex = 0.5, col = "red")
Z <- barplot(PopSt_sig_pct, las=3,ylim=c(0,45),  main="Population_K3 Significantly Diff Methylated",cex.names = 0.5)
text(x = Z, y = PopSt_sig_pct, label = PopSt_sig_achr_number_tiles, pos = 3, cex = 0.5, col = "red")


LC_MI_sig_achr <-assignChromosomeRegion(LC_MI_sig, nucleotideLevel=FALSE, 
                                        precedence=c("Promoters", "immediateDownstream", 
                                                     "fiveUTRs", "threeUTRs", 
                                                     "Exons", "Introns"), 
                                        TxDb=Cvirginica_txDB)

pdf(file = "barplot_percent_sig_LC_v_MI.pdf", width = 12, height = 9);
Z <- barplot(LC_MI_sig_achr$percentage, las=3,ylim=c(0,75),  main="LC vs MI Significantly Diff Methylated")
text(x = Z, y = LC_MI_sig_achr$percentage, label = LC_MI_sig_achr$percentage, pos = 3, cex = 0.8, col = "red")

dev.off()
pie(LC_MI_sig_achr$percentage, las=3)

LC_LF_sig_achr <-assignChromosomeRegion(LC_LF_sig, nucleotideLevel=FALSE, 
                                        precedence=c("Promoters", "immediateDownstream", 
                                                     "fiveUTRs", "threeUTRs", 
                                                     "Exons", "Introns"), 
                                        TxDb=Cvirginica_txDB)
pdf(file = "barplot_percent_sig_LC_v_LF.pdf", width = 12, height = 9);
Z <- barplot(LC_LF_sig_achr$percentage, las=3,ylim=c(0,75),  main="LC vs LF Significantly Diff Methylated")
text(x = Z, y = LC_LF_sig_achr$percentage, label = LC_LF_sig_achr$percentage, pos = 3, cex = 0.8, col = "red")
dev.off()
pie(LC_LF_sig_achr$percentage, las=3)

LC_SL_sig_achr <-assignChromosomeRegion(LC_SL_sig, nucleotideLevel=FALSE, 
                                        precedence=c("Promoters", "immediateDownstream", 
                                                     "fiveUTRs", "threeUTRs", 
                                                     "Exons", "Introns"), 
                                        TxDb=Cvirginica_txDB)
pdf(file = "barplot_percent_sig_LC_v_SL.pdf", width = 12, height = 9);
Z <- barplot(LC_SL_sig_achr$percentage, las=3,ylim=c(0,75),  main="LC vs SL Significantly Diff Methylated")
text(x = Z, y = LC_SL_sig_achr$percentage, label = LC_SL_sig_achr$percentage, pos = 3, cex = 0.8, col = "red")
dev.off()
pie(LC_SL_sig_achr$percentage, las=3)

LF_MI_sig_achr <-assignChromosomeRegion(LF_MI_sig, nucleotideLevel=FALSE, 
                                        precedence=c("Promoters", "immediateDownstream", 
                                                     "fiveUTRs", "threeUTRs", 
                                                     "Exons", "Introns"), 
                                        TxDb=Cvirginica_txDB)
pdf(file = "barplot_percent_sig_LF_v_MI.pdf", width = 12, height = 9);
Z <- barplot(LF_MI_sig_achr$percentage, las=3,ylim=c(0,75),  main="LF vs MI Significantly Diff Methylated")
text(x = Z, y = LF_MI_sig_achr$percentage, label = LF_MI_sig_achr$percentage, pos = 3, cex = 0.8, col = "red")
dev.off()
pie(LF_MI_sig_achr$percentage, las=3)

LF_SL_sig_achr <-assignChromosomeRegion(LF_SL_sig, nucleotideLevel=FALSE, 
                                        precedence=c("Promoters", "immediateDownstream", 
                                                     "fiveUTRs", "threeUTRs", 
                                                     "Exons", "Introns"), 
                                        TxDb=Cvirginica_txDB)
pdf(file = "barplot_percent_sig_LF_v_SL.pdf", width = 12, height = 9);
Z <- barplot(LF_SL_sig_achr$percentage, las=3,ylim=c(0,75),  main="LF vs SL Significantly Diff Methylated")
text(x = Z, y = LF_SL_sig_achr$percentage, label = LF_SL_sig_achr$percentage, pos = 3, cex = 0.8, col = "red")
dev.off()
pie(LF_SL_sig_achr$percentage, las=3)

SL_MI_sig_achr <-assignChromosomeRegion(SL_MI_sig, nucleotideLevel=FALSE, 
                            precedence=c("Promoters", "immediateDownstream", 
                                         "fiveUTRs", "threeUTRs", 
                                         "Exons", "Introns"), 
                            TxDb=Cvirginica_txDB)
pdf(file = "barplot_percent_sig_SL_v_MI.pdf", width = 12, height = 9);
Z <- barplot(SL_MI_sig_achr$percentage, las=3, ylim=c(0,75),  main="SL vs MI Significantly Diff Methylated")
text(x = Z, y = SL_MI_sig_achr$percentage, label = SL_MI_sig_achr$percentage, pos = 3, cex = 0.8, col = "red")
dev.off()

#Pie Charts

PopSt_sig_achr_pie<- PopSt_sig_achr$percentage
Names <- names(PopSt_sig_achr_pie)
pct <- round(PopSt_sig_achr_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 

pdf(file = "pieplot_percent_sig_popk3.pdf", width = 12, height = 9);
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(PopSt_sig_achr_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="K3 Population Significantly Diff Methylated")
legend("bottomright", legend=Names,bty="n",ncol=1,
       fill=brewer.pal(7,"Set3"))
dev.off()

LC_MI_sig_achr_pie <- LC_MI_sig_achr$percentage
Names <- names(LC_MI_sig_achr_pie)
pct <- round(LC_MI_sig_achr_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 

pdf(file = "pieplot_percent_sig_LC_v_MI.pdf", width = 12, height = 9);
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(LC_MI_sig_achr_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="LC vs MI Significantly Diff Methylated")
legend("bottomright", legend=Names,bty="n",ncol=1,
       fill=brewer.pal(7,"Set3"))
dev.off()

LC_LF_sig_achr_pie <- LC_LF_sig_achr$percentage

Names <- names(LC_LF_sig_achr_pie)
pct <- round(LC_LF_sig_achr_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 

pdf(file = "pieplot_percent_sig_LC_v_LF.pdf", width = 12, height = 9);
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(LC_LF_sig_achr_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="LC vs LF Significantly Diff Methylated")
legend("bottomright", legend=Names,bty="n",ncol=1,
       fill=brewer.pal(7,"Set3"))
dev.off()

LC_SL_sig_achr_pie <- LC_SL_sig_achr$percentage

Names <- names(LC_SL_sig_achr_pie)
pct <- round(LC_SL_sig_achr_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 
pdf(file = "pieplot_percent_sig_LC_v_SL.pdf", width = 12, height = 9);
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(LC_SL_sig_achr_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="LC vs SL Significantly Diff Methylated")
legend("bottomright", legend=Names,bty="n",ncol=1,
       fill=brewer.pal(7,"Set3"))
dev.off()

LF_MI_sig_achr_pie <- LF_MI_sig_achr$percentage

Names <- names(LF_MI_sig_achr_pie)
pct <- round(LF_MI_sig_achr_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 
pdf(file = "pieplot_percent_sig_LF_v_MI.pdf", width = 12, height = 9);
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(LF_MI_sig_achr_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="LF vs MI Significantly Diff Methylated")
legend("bottomright", legend=Names,bty="n",ncol=1,
       fill=brewer.pal(7,"Set3"))
dev.off()

LF_SL_sig_achr_pie <- LF_SL_sig_achr$percentage

Names <- names(LF_SL_sig_achr_pie)
pct <- round(LF_SL_sig_achr_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 
pdf(file = "pieplot_percent_sig_LF_v_SL.pdf", width = 12, height = 9);
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(LF_SL_sig_achr_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="LF vs SL Significantly Diff Methylated")
legend("bottomright",legend=Names,bty="n",ncol=1,
       fill=brewer.pal(7,"Set3"))
dev.off()

SL_MI_sig_achr_pie <- SL_MI_sig_achr$percentage

Names <- names(SL_MI_sig_achr_pie)
pct <- round(SL_MI_sig_achr_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 
pdf(file = "pieplot_percent_sig_SL_v_MI.pdf", width = 12, height = 9);
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(SL_MI_sig_achr_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="SL vs MI Significantly Diff Methylated")
legend("bottomright",legend=Names,bty="n",ncol=1,
       fill=brewer.pal(7,"Set3"))
dev.off()

#Add Gene Product Annotation with probe and Diff_methylation_value

CV_Gene_Annotations_Final <- read.delim("~/Dropbox/Kyle_TagSeq/CV_Gene_Annotations_Final.txt")
colnames(CV_Gene_Annotations_Final)[1] <- c("ID")
library(readr)
All_probes <- read_delim("~/Dropbox/EpiGBS/METHYLKIT_FINAL_OUT/All_probes_Seqmonk.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
All_probes <- as.data.frame(All_probes)
dim(All_probes)
#7433 12
All_probes$Start_real <- All_probes$Start -1
All_probes$Positon <- paste(All_probes$Chromosome,All_probes$Start_real,All_probes$End, sep = "_")
All_probes_annot <- merge(All_probes,CV_Gene_Annotations_Final, by ="ID",all.x=T)
All_probes_GeneBody <- All_probes_annot[(All_probes_annot$`Feature Orientation` == "overlapping") | (All_probes_annot$`Feature Orientation` == "downstream") & All_probes_annot$Distance <= 2000 | (All_probes_annot$`Feature Orientation` == "upstream") & All_probes_annot$Distance <= 2000,]
All_probes_GeneBody_GO_MWU_background <- All_probes_GeneBody[,c(2,24)]
All_probes_GeneBody_GO_MWU_background <- unique(All_probes_GeneBody_GO_MWU_background)
All_probes_GO_MWU <- All_probes_annot[,c(1,24)]
All_probes_GO_MWU <- unique(All_probes_GO_MWU)
All_probes$Loci <- paste(All_probes$Chromosome,All_probes$Start,All_probes$End,sep=".")
Pairwise_background <- merge(All_NS2,All_probes,by="Loci")
Pairwise_background <- merge(Pairwise_background,CV_Gene_Annotations_Final,by="ID",all.x=T)
Pairwise_background_GeneBody <- Pairwise_background[(Pairwise_background$`Feature Orientation` == "overlapping") | (Pairwise_background$`Feature Orientation` == "downstream") & Pairwise_background$Distance <= 2000 | (Pairwise_background$`Feature Orientation` == "upstream") & Pairwise_background$Distance <= 2000,]
colnames(Pairwise_background_GeneBody)
Pairwise_background_GeneBody_GO_MWU_background <- Pairwise_background_GeneBody[,c(99,109)]
dim(Pairwise_background_GeneBody_GO_MWU_background)

#write.table(Pairwise_background_GeneBody_GO_MWU_background,"GO_MWU/GO_MWU_background_pairwise_GeneBody.tab",sep="\t",quote=F,row.names=F)

PopSt_sig_Diff <- bedgraph(popSt.15_sig,col.name =c("pvalue", "qvalue", "meth.diff"))
PopSt_sig_Diff$Positon <- paste(PopSt_sig_Diff$chr,PopSt_sig_Diff$start,PopSt_sig_Diff$end, sep = "_") 
PopSt_sig_for_annot <- merge(All_probes,PopSt_sig_Diff, by = "Positon",all.y=T)
PopSt_sig_annot <- merge(PopSt_sig_for_annot,CV_Gene_Annotations_Final, by ="ID",all.x=T)
dim(PopSt_sig_annot)
#write.csv(PopSt_sig_annot,"K2_PopSt_sig_annot.csv")
#Now use nonsignificant list for Mann-Whiteney U Test
PopSt_nonsig_Diff <- bedgraph(popSt.nonsig,col.name =c("pvalue", "qvalue", "meth.diff"))
PopSt_nonsig_Diff$Positon <- paste(PopSt_nonsig_Diff$chr,PopSt_nonsig_Diff$start,PopSt_nonsig_Diff$end, sep = "_") 
PopSt_nonsig_for_GOmWU <- merge(PopSt_nonsig_Diff,All_probes, by = "Positon")
PopSt_nonsig_annot <- merge(PopSt_nonsig_for_GOmWU,CV_Gene_Annotations_Final, by ="ID",all.x=T)
PopSt_nonsig_annot$Direction <- ifelse(PopSt_nonsig_annot$score.meth.diff >=0,1,-1)
PopSt_nonsig_annot$signq <- PopSt_nonsig_annot$score.qvalue * PopSt_nonsig_annot$Direction
PopSt_nonsig_GeneBody <- PopSt_nonsig_annot[(PopSt_nonsig_annot$`Feature Orientation` == "overlapping") | (PopSt_nonsig_annot$`Feature Orientation` == "downstream") & PopSt_nonsig_annot$Distance <= 2000 | (PopSt_nonsig_annot$`Feature Orientation` == "upstream") & PopSt_nonsig_annot$Distance <= 2000,]
PopSt_nonsig_GeneBody_GO_MWU <- PopSt_nonsig_GeneBody[,c(2,34)]
#write.csv(PopSt_nonsig_GeneBody_GO_MWU,"GO_MWU/PopSt_nonsig_GeneBody_GO_MWU.csv",quote=F,row.names = F)

LC_LF_sig_Diff <- bedgraph(LC_LF.15_sig,col.name =c("pvalue", "qvalue", "meth.diff"))
LC_LF_sig_Diff$Positon <- paste(LC_LF_sig_Diff$chr,LC_LF_sig_Diff$start,LC_LF_sig_Diff$end, sep = "_") 
LCLF <- merge(All_probes,LC_LF_sig_Diff, by = "Positon")
LCLF_sig_annot <- merge(LCLF,CV_Gene_Annotations_Final, by ="ID",all.x=T)
#write.csv(LCLF_sig_annot,"LCLF_sig_annot.csv")
LC_LF_nonsig_Diff <- bedgraph(LC_LF.nonsig,col.name =c("pvalue", "qvalue", "meth.diff"))
LC_LF_nonsig_Diff$Positon <- paste(LC_LF_nonsig_Diff$chr,LC_LF_nonsig_Diff$start,LC_LF_nonsig_Diff$end, sep = "_") 
LCLF_nonsig <- merge(All_probes,LC_LF_nonsig_Diff, by = "Positon")
LCLF_nonsig_annot <- merge(LCLF_nonsig,CV_Gene_Annotations_Final, by ="ID",all.x=T)
LCLF_nonsig_annot$Direction <- ifelse(LCLF_nonsig_annot$score.meth.diff >=0,1,-1)
LCLF_nonsig_annot$signq <- LCLF_nonsig_annot$score.qvalue * LCLF_nonsig_annot$Direction
LCLF_nonsig_GeneBody <- LCLF_nonsig_annot[(LCLF_nonsig_annot$`Feature Orientation` == "overlapping") | (LCLF_nonsig_annot$`Feature Orientation` == "downstream") & LCLF_nonsig_annot$Distance <= 2000 | (LCLF_nonsig_annot$`Feature Orientation` == "upstream") & LCLF_nonsig_annot$Distance <= 2000,]
LCLF_nonsig_GeneBody_GO_MWU <- LCLF_nonsig_GeneBody[,c(2,34)]
head(LCLF_nonsig_GeneBody_GO_MWU)
#write.csv(LCLF_nonsig_GeneBody_GO_MWU,"GO_MWU/LCLF_nonsig_GeneBody_GO_MWU.csv",quote=F,row.names = F)


LC_MI_sig_Diff <- bedgraph(LC_MI.15_sig,col.name =c("pvalue", "qvalue", "meth.diff"))
LC_MI_sig_Diff$Positon <- paste(LC_MI_sig_Diff$chr,LC_MI_sig_Diff$start,LC_MI_sig_Diff$end, sep = "_") 
LCMI <- merge(All_probes,LC_MI_sig_Diff, by = "Positon")
LCMI_sig_annot <- merge(LCMI,CV_Gene_Annotations_Final, by ="ID",all.x=T)
#write.csv(LCMI_sig_annot,"LCMI_sig_annot.csv")
LC_MI_nonsig_Diff <- bedgraph(LC_MI.nonsig,col.name =c("pvalue", "qvalue", "meth.diff"))
LC_MI_nonsig_Diff$Positon <- paste(LC_MI_nonsig_Diff$chr,LC_MI_nonsig_Diff$start,LC_MI_nonsig_Diff$end, sep = "_") 
LCMI_nonsig <- merge(All_probes,LC_MI_nonsig_Diff, by = "Positon")
LCMI_nonsig_annot <- merge(LCMI_nonsig,CV_Gene_Annotations_Final, by ="ID",all.x=T)
LCMI_nonsig_annot$Direction <- ifelse(LCMI_nonsig_annot$score.meth.diff >=0,1,-1)
LCMI_nonsig_annot$signq <- LCMI_nonsig_annot$score.qvalue * LCMI_nonsig_annot$Direction
LCMI_nonsig_GeneBody <- LCMI_nonsig_annot[(LCMI_nonsig_annot$`Feature Orientation` == "overlapping") | (LCMI_nonsig_annot$`Feature Orientation` == "downstream") & LCMI_nonsig_annot$Distance <= 2000 | (LCMI_nonsig_annot$`Feature Orientation` == "upstream") & LCMI_nonsig_annot$Distance <= 2000,]
LCMI_nonsig_GeneBody_GO_MWU <- LCMI_nonsig_GeneBody[,c(2,34)]
head(LCMI_nonsig_GeneBody_GO_MWU)
#write.csv(LCMI_nonsig_GeneBody_GO_MWU,"GO_MWU/LCMI_nonsig_GeneBody_GO_MWU.csv",quote=F,row.names = F)


LC_SL_sig_Diff <- bedgraph(LC_SL.15_sig,col.name =c("pvalue", "qvalue", "meth.diff"))
LC_SL_sig_Diff$Positon <- paste(LC_SL_sig_Diff$chr,LC_SL_sig_Diff$start,LC_SL_sig_Diff$end, sep = "_") 
LCSL <- merge(All_probes,LC_SL_sig_Diff, by = "Positon")
LCSL_sig_annot <- merge(LCSL,CV_Gene_Annotations_Final, by ="ID",all.x=T)
#write.csv(LCSL_sig_annot,"LCSL_sig_annot.csv")
LC_SL_nonsig_Diff <- bedgraph(LC_SL.nonsig,col.name =c("pvalue", "qvalue", "meth.diff"))
LC_SL_nonsig_Diff$Positon <- paste(LC_SL_nonsig_Diff$chr,LC_SL_nonsig_Diff$start,LC_SL_nonsig_Diff$end, sep = "_") 
LCSL_nonsig <- merge(All_probes,LC_SL_nonsig_Diff, by = "Positon")
LCSL_nonsig_annot <- merge(LCSL_nonsig,CV_Gene_Annotations_Final, by ="ID",all.x=T)
LCSL_nonsig_annot$Direction <- ifelse(LCSL_nonsig_annot$score.meth.diff >=0,1,-1)
LCSL_nonsig_annot$signq <- LCSL_nonsig_annot$score.qvalue * LCSL_nonsig_annot$Direction
LCSL_nonsig_GeneBody <- LCSL_nonsig_annot[(LCSL_nonsig_annot$`Feature Orientation` == "overlapping") | (LCSL_nonsig_annot$`Feature Orientation` == "downstream") & LCSL_nonsig_annot$Distance <= 2000 | (LCSL_nonsig_annot$`Feature Orientation` == "upstream") & LCSL_nonsig_annot$Distance <= 2000,]
LCSL_nonsig_GeneBody_GO_MWU <- LCSL_nonsig_GeneBody[,c(2,34)]
head(LCSL_nonsig_GeneBody_GO_MWU)
#write.csv(LCSL_nonsig_GeneBody_GO_MWU,"GO_MWU/LCSL_nonsig_GeneBody_GO_MWU.csv",quote=F,row.names = F)

LF_MI_sig_Diff <- bedgraph(LF_MI.15_sig,col.name =c("pvalue", "qvalue", "meth.diff"))
LF_MI_sig_Diff$Positon <- paste(LF_MI_sig_Diff$chr,LF_MI_sig_Diff$start,LF_MI_sig_Diff$end, sep = "_") 
LFMI <- merge(All_probes,LF_MI_sig_Diff, by = "Positon")
LFMI_sig_annot <-merge(LFMI,CV_Gene_Annotations_Final, by ="ID",all.x=T)
#write.csv(LFMI_sig_annot,"LFMI_sig_annot.csv")
LF_MI_nonsig_Diff <- bedgraph(LF_MI.nonsig,col.name =c("pvalue", "qvalue", "meth.diff"))
LF_MI_nonsig_Diff$Positon <- paste(LF_MI_nonsig_Diff$chr,LF_MI_nonsig_Diff$start,LF_MI_nonsig_Diff$end, sep = "_") 
LFMI_nonsig <- merge(All_probes,LF_MI_nonsig_Diff, by = "Positon")
LFMI_nonsig_annot <- merge(LFMI_nonsig,CV_Gene_Annotations_Final, by ="ID",all.x=T)
LFMI_nonsig_annot$Direction <- ifelse(LFMI_nonsig_annot$score.meth.diff >=0,1,-1)
LFMI_nonsig_annot$signq <- LFMI_nonsig_annot$score.qvalue * LFMI_nonsig_annot$Direction
LFMI_nonsig_GeneBody <- LFMI_nonsig_annot[(LFMI_nonsig_annot$`Feature Orientation` == "overlapping") | (LFMI_nonsig_annot$`Feature Orientation` == "downstream") & LFMI_nonsig_annot$Distance <= 2000 | (LFMI_nonsig_annot$`Feature Orientation` == "upstream") & LFMI_nonsig_annot$Distance <= 2000,]
LFMI_nonsig_GeneBody_GO_MWU <- LFMI_nonsig_GeneBody[,c(2,34)]
head(LFMI_nonsig_GeneBody_GO_MWU)
#write.csv(LFMI_nonsig_GeneBody_GO_MWU,"GO_MWU/LFMI_nonsig_GeneBody_GO_MWU.csv",quote=F,row.names = F)

LF_SL_sig_Diff <- bedgraph(LF_SL.15_sig,col.name =c("pvalue", "qvalue", "meth.diff"))
LF_SL_sig_Diff$Positon <- paste(LF_SL_sig_Diff$chr,LF_SL_sig_Diff$start,LF_SL_sig_Diff$end, sep = "_") 
LFSL <- merge(All_probes,LF_SL_sig_Diff, by = "Positon")
LFSL_sig_annot <- merge(LFSL,CV_Gene_Annotations_Final, by ="ID",all.x=T)
#write.csv(LFSL_sig_annot,"LFSL_sig_annot.csv")
LF_SL_nonsig_Diff <- bedgraph(LF_SL.nonsig,col.name =c("pvalue", "qvalue", "meth.diff"))
LF_SL_nonsig_Diff$Positon <- paste(LF_SL_nonsig_Diff$chr,LF_SL_nonsig_Diff$start,LF_SL_nonsig_Diff$end, sep = "_") 
LFSL_nonsig <- merge(All_probes,LF_SL_nonsig_Diff, by = "Positon")
LFSL_nonsig_annot <- merge(LFSL_nonsig,CV_Gene_Annotations_Final, by ="ID",all.x=T)
LFSL_nonsig_annot$Direction <- ifelse(LFSL_nonsig_annot$score.meth.diff >=0,1,-1)
LFSL_nonsig_annot$signq <- LFSL_nonsig_annot$score.qvalue * LFSL_nonsig_annot$Direction
LFSL_nonsig_GeneBody <- LFSL_nonsig_annot[(LFSL_nonsig_annot$`Feature Orientation` == "overlapping") | (LFSL_nonsig_annot$`Feature Orientation` == "downstream") & LFSL_nonsig_annot$Distance <= 2000 | (LFSL_nonsig_annot$`Feature Orientation` == "upstream") & LFSL_nonsig_annot$Distance <= 2000,]
LFSL_nonsig_GeneBody_GO_MWU <- LFSL_nonsig_GeneBody[,c(2,34)]
head(LFSL_nonsig_GeneBody_GO_MWU)
#write.csv(LFSL_nonsig_GeneBody_GO_MWU,"GO_MWU/LFSL_nonsig_GeneBody_GO_MWU.csv",quote=F,row.names = F)

SL_MI_sig_Diff <- bedgraph(SL_MI.15_sig,col.name =c("pvalue", "qvalue", "meth.diff"))
SL_MI_sig_Diff$Positon <- paste(SL_MI_sig_Diff$chr,SL_MI_sig_Diff$start,SL_MI_sig_Diff$end, sep = "_") 
SLMI <- merge(All_probes,SL_MI_sig_Diff, by = "Positon")
SLMI_sig_annot <- merge(SLMI,CV_Gene_Annotations_Final, by ="ID",all.x=T)
#write.csv(SLMI_sig_annot,"SLMI_sig_annot.csv")
SL_MI_nonsig_Diff <- bedgraph(SL_MI.nonsig,col.name =c("pvalue", "qvalue", "meth.diff"))
SL_MI_nonsig_Diff$Positon <- paste(SL_MI_nonsig_Diff$chr,SL_MI_nonsig_Diff$start,SL_MI_nonsig_Diff$end, sep = "_") 
SLMI_nonsig <- merge(All_probes,SL_MI_nonsig_Diff, by = "Positon")
SLMI_nonsig_annot <- merge(SLMI_nonsig,CV_Gene_Annotations_Final, by ="ID",all.x=T)
SLMI_nonsig_annot$Direction <- ifelse(SLMI_nonsig_annot$score.meth.diff >=0,1,-1)
SLMI_nonsig_annot$signq <- SLMI_nonsig_annot$score.qvalue * SLMI_nonsig_annot$Direction
SLMI_nonsig_GeneBody <- SLMI_nonsig_annot[(SLMI_nonsig_annot$`Feature Orientation` == "overlapping") | (SLMI_nonsig_annot$`Feature Orientation` == "downstream") & SLMI_nonsig_annot$Distance <= 2000 | (SLMI_nonsig_annot$`Feature Orientation` == "upstream") & SLMI_nonsig_annot$Distance <= 2000,]
SLMI_nonsig_GeneBody_GO_MWU <- SLMI_nonsig_GeneBody[,c(2,34)]
head(SLMI_nonsig_GeneBody_GO_MWU)
#write.csv(SLMI_nonsig_GeneBody_GO_MWU,"GO_MWU/SLMI_nonsig_GeneBody_GO_MWU.csv",quote=F,row.names = F)

#Let's remove extra columns
reduced_SLMI <- SLMI_sig_annot[c(1,2,4,5,6,8,12,13,19,20,21,29,32,33)]
reduced_LCSL <- LCSL_sig_annot[c(1,2,4,5,6,8,12,13,19,20,21,29,32,33)]
reduced_LFSL <- LFSL_sig_annot[c(1,2,4,5,6,8,12,13,19,20,21,29,32,33)]
reduced_LFMI <- LFMI_sig_annot[c(1,2,4,5,6,8,12,13,19,20,21,29,32,33)]
reduced_LCMI <- LCMI_sig_annot[c(1,2,4,5,6,8,12,13,19,20,21,29,32,33)]
reduced_LCLF <- LCLF_sig_annot[c(1,2,4,5,6,8,12,13,19,20,21,29,32,33)]

colnames(reduced_SLMI) <- c("SLMI.ID","Positon","SLMI.Chromosome","SLMI.Start","SLMI.End","SLMI.protein_id","SLMI.Orientation","SLMI.Distance","SLMI.score.pvalue","SLMI.score.qvalue", "SLMI.score.meth.diff","SLMI.gene.product","SLMI.Enzyme.Code","SLMI.Enzyme.Name")
colnames(reduced_LCSL) <- c("LCSL.ID","Positon","LCSL.Chromosome","LCSL.Start","LCSL.End","LCSL.protein_id","LCSL.Orientation","LCSL.Distance","LCSL.score.qvalue","LCSL.score.pvalue", "LCSL.score.meth.diff","LCSL.gene.product","LCSL.Enzyme.Code","LCSL.Enzyme.Name")
colnames(reduced_LFSL) <- c("LFSL.ID","Positon","LFSL.Chromosome","LFSL.Start","LFSL.End","LFSL.protein_id","LFSL.Orientation","LFSL.Distance","LFSL.score.qvalue","LFSL.score.pvalue", "LFSL.score.meth.diff","LFSL.gene.product","LFSL.Enzyme.Code","LFSL.Enzyme.Name")
colnames(reduced_LFMI) <- c("LFMI.ID","Positon","LFMI.Chromosome","LFMI.Start","LFMI.End","LFMI.protein_id","LFMI.Orientation","LFMI.Distance","LFMI.score.qvalue","LFMI.score.pvalue", "LFMI.score.meth.diff","LFMI.gene.product","LFMI.Enzyme.Code","LFMI.Enzyme.Name")
colnames(reduced_LCMI) <- c("LCMI.ID","Positon","LCMI.Chromosome","LCMI.Start","LCMI.End","LCMI.protein_id","LCMI.Orientation","LCMI.Distance","LCMI.score.qvalue","LCMI.score.pvalue", "LCMI.score.meth.diff","LCMI.gene.product","LCMI.Enzyme.Code","LCMI.Enzyme.Name")
colnames(reduced_LCLF) <- c("LCLF.ID","Positon","LCLF.Chromosome","LCLF.Start","LCLF.End","LCLF.protein_id","LCLF.Orientation","LCLF.Distance","LCLF.score.qvalue","LCLF.score.pvalue", "LCLF.score.meth.diff","LCLF.gene.product","LCLF.Enzyme.Code","LCLF.Enzyme.Name")

reduced_SLMI$Comparison <- c("SLMI")
reduced_LCSL$Comparison <- c("LCSL")
reduced_LFSL$Comparison <- c("LFSL")
reduced_LFMI$Comparison <- c("LFMI")
reduced_LCMI$Comparison <- c("LCMI")
reduced_LCLF$Comparison <- c("LCLF")

All <- merge(reduced_SLMI,reduced_LCSL,by="Positon",all=T)
All <- merge(All,reduced_LFSL,by="Positon",all=T)
All <- merge(All,reduced_LFMI,by="Positon",all=T)
All <- merge(All,reduced_LCMI,by="Positon",all=T)
All <- merge(All,reduced_LCLF,by="Positon",all=T)

dim(All)
#312 73
#once again we see that 312 DMRs were found across all comparisons
#write.csv(All,"ALL_DMRs.csv",quote=F)

all_v_LC <- merge(reduced_LCLF,reduced_LCMI, by ="Positon", all=TRUE)
all_v_LC <- merge(all_v_LC,reduced_LCSL, by ="Positon", all=TRUE)
all_v_LC_complete <- all_v_LC[complete.cases(all_v_LC),]
dim(all_v_LC)
#174 DMRs vs LC
#6 shared in comparison to all others
#write.csv(all_v_LC, "All_shared_v_LC_Sig_Annotations.csv")

all_v_MI <- merge(reduced_LFMI,reduced_LCMI, by ="Positon", all=TRUE)
all_v_MI <- merge(all_v_MI,reduced_SLMI, by ="Positon", all=TRUE)
all_v_MI_complete <- all_v_MI[complete.cases(all_v_MI),]
dim(all_v_MI)
#253 DMRs vs Marsh Island
dim(all_v_MI_complete)
#1 shared in comparison to all others
#write.csv(all_v_MI, "All_shared_v_MI_Sig_Annotations.csv")

all_v_LF <- merge(reduced_LCLF,reduced_LFMI, by ="Positon", all=TRUE)
all_v_LF <- merge(all_v_LF,reduced_LFSL, by ="Positon", all=TRUE)
all_v_LF_complete <- all_v_LF[complete.cases(all_v_LF),]
dim(all_v_LF)
#201 DMRs vs LF
dim(all_v_LF_complete)
#2 shared in comparison to all others
#write.csv(all_v_LF, "All_shared_v_LF_Sig_Annotations.csv")

all_v_SL <- merge(reduced_LCSL,reduced_LFSL, by ="Positon", all=TRUE)
all_v_SL <- merge(all_v_SL,reduced_SLMI, by ="Positon", all=TRUE)
all_v_SL_complete <- all_v_SL[complete.cases(all_v_SL),]
dim(all_v_SL)
#111 DMRs vs SL
dim(all_v_SL_complete)
#6 shared in comparison to all others
#write.csv(all_v_SL, "All_shared_v_SL_Sig_Annotations.csv")

# This calclates populaton specific methylation distributions
file.list.LC = list("A1.bismark.cov","A2.bismark.cov","A3.bismark.cov","A4.bismark.cov","A5.bismark.cov","A6.bismark.cov","A7.bismark.cov","A9.bismark.cov","A10.bismark.cov","G9.bismark.cov","H1.bismark.cov","B1.bismark.cov","B2.bismark.cov","B3.bismark.cov","B4.bismark.cov","B5.bismark.cov","B6.bismark.cov","B7.bismark.cov","B8.bismark.cov")

LC_myobj <- methRead(file.list.LC, sample.id = list("LC1", "LC10", "LC11", "LC12", "LC13", "LC14", "LC15", "LC16", "LC17", "LC18", "LC19", "LC2", "LC3", "LC4", "LC5", "LC6", "LC7",  "LC9"), 
                     assembly = "cv3.0", pipeline = "bismarkCoverage",
                     treatment = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                     context = "CpG")


file.list.LF = list("D5.bismark.cov","D6.bismark.cov","D7.bismark.cov","D8.bismark.cov","D9.bismark.cov","D10.bismark.cov","H8.bismark.cov","H4.bismark.cov","E1.bismark.cov","E2.bismark.cov","E3.bismark.cov","E4.bismark.cov","E5.bismark.cov","E6.bismark.cov","E7.bismark.cov","E8.bismark.cov","E9.bismark.cov","E10.bismark.cov","H9.bismark.cov","H5.bismark.cov")

LF_myobj <- methRead(file.list.LF, sample.id = list("LF1", "LF10", "LF11", "LF12", "LF13", "LF14", "LF15", "LF16", "LF17", "LF18", "LF19", "LF2", "LF20", "LF3", "LF4", "LF5", "LF6", "LF7", "LF8", "LF9"), 
                     assembly = "cv3.0", pipeline = "bismarkCoverage",
                     treatment = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                     context = "CpG")

file.list.SL = list("F1.bismark.cov","F2.bismark.cov","F3.bismark.cov","F4.bismark.cov","F6.bismark.cov","F7.bismark.cov","F8.bismark.cov","F10.bismark.cov","H10.bismark.cov","H6.bismark.cov","G1.bismark.cov","G2.bismark.cov","G3.bismark.cov","G4.bismark.cov","G5.bismark.cov","G6.bismark.cov","G7.bismark.cov","G8.bismark.cov",)

SL_myobj <- methRead(file.list.SL, sample.id = list("SL1", "SL10",  "SL12", "SL13", "SL14", "SL15", "SL16", "SL17", "SL18", "SL2", "SL3", "SL4", "SL5", "SL6",  "SL8", "SL9"), 
                     assembly = "cv3.0", pipeline = "bismarkCoverage",
                     treatment = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                     context = "CpG")


file.list.MI = list("B9.bismark.cov","B10.bismark.cov","G10.bismark.cov","H2.bismark.cov","C1.bismark.cov","C2.bismark.cov","C3.bismark.cov","C4.bismark.cov","C5.bismark.cov","C6.bismark.cov","C7.bismark.cov","C8.bismark.cov","C9.bismark.cov","C10.bismark.cov","H7.bismark.cov","H3.bismark.cov","D1.bismark.cov","D2.bismark.cov","D3.bismark.cov","D4.bismark.cov")

MI_myobj <- methRead(file.list.MI, sample.id = list("MI1", "MI10", "MI11", "MI12", "MI13", "MI14", "MI15", "MI16",	"MI17", "MI18", "MI19", "MI2", "MI20",	"MI3", "MI4", "MI5", "MI6", "MI7", "MI8", "MI9"), 
                     assembly = "cv3.0", pipeline = "bismarkCoverage",
                     treatment = c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1), 
                     context = "CpG")

myobj <- LC_myobj 
filtered.myobj <- filterByCoverage(myobj, lo.count = 10,
                                   lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
meth.min <- unite(filtered.myobj,min.per.group = 8L)

LC_Populations <- as(meth.min, "GRanges")
LC_Populations_chr <-assignChromosomeRegion(LC_Populations, nucleotideLevel=FALSE, 
                                            precedence=c("Promoters", "immediateDownstream", 
                                                         "fiveUTRs", "threeUTRs", 
                                                         "Exons", "Introns"), 
                                            TxDb=Cvirginica_txDB)

Z <- barplot(LC_Populations_chr$percentage, las=3,ylim=c(0,100),  main="LCs Methylation distribution")
text(x = Z, y = LC_Populations_chr$percentage, label = LC_Populations_chr$percentage, pos = 3, cex = 0.8, col = "red")

LC_Populations_pie <- LC_Populations_chr$percentage

Names <- names(LC_Populations_pie)
pct <- round(LC_Populations_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 

par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(LC_Populations_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="LC Methylation distribution")
legend("bottomright",inset=c(-1.1,-.05), legend=Names,bty="n",ncol=1,fill=brewer.pal(7,"Set3"))


myobj <- LF_myobj 
filtered.myobj <- filterByCoverage(myobj, lo.count = 10,
                                   lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
meth.min <- unite(filtered.myobj,min.per.group = 8L)

LF_Populations <- as(meth.min, "GRanges")
LF_Populations_chr <-assignChromosomeRegion(LF_Populations, nucleotideLevel=FALSE, 
                                            precedence=c("Promoters", "immediateDownstream", 
                                                         "fiveUTRs", "threeUTRs", 
                                                         "Exons", "Introns"), 
                                            TxDb=Cvirginica_txDB)

Z <- barplot(LF_Populations_chr$percentage, las=3,ylim=c(0,100),  main="LF Methylation distribution")
text(x = Z, y = LF_Populations_chr$percentage, label = LF_Populations_chr$percentage, pos = 3, cex = 0.8, col = "red")

LF_Populations_pie <- LF_Populations_chr$percentage

Names <- names(LF_Populations_pie)
pct <- round(LF_Populations_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 

par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(LF_Populations_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="LF Methylation distribution")
legend("bottomright",inset=c(-1.1,-.05), legend=Names,bty="n",ncol=1,fill=brewer.pal(7,"Set3"))


myobj <- SL_myobj 
filtered.myobj <- filterByCoverage(myobj, lo.count = 10,
                                   lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
meth.min <- unite(filtered.myobj,min.per.group = 8L)

SL_Populations <- as(meth.min, "GRanges")
SL_Populations_chr <-assignChromosomeRegion(SL_Populations, nucleotideLevel=FALSE, 
                                            precedence=c("Promoters", "immediateDownstream", 
                                                         "fiveUTRs", "threeUTRs", 
                                                         "Exons", "Introns"), 
                                            TxDb=Cvirginica_txDB)

Z <- barplot(SL_Populations_chr$percentage, las=3,ylim=c(0,100),  main="SL Methylation distribution")
text(x = Z, y = SL_Populations_chr$percentage, label = SL_Populations_chr$percentage, pos = 3, cex = 0.8, col = "red")

SL_Populations_pie <- SL_Populations_chr$percentage

Names <- names(SL_Populations_pie)
pct <- round(SL_Populations_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 

par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(SL_Populations_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="SL Methylation distribution")
legend("bottomright",inset=c(-1.1,-.05), legend=Names,bty="n",ncol=1,fill=brewer.pal(7,"Set3"))


myobj <- MI_myobj 
filtered.myobj <- filterByCoverage(myobj, lo.count = 10,
                                   lo.perc = NULL, hi.count = NULL, hi.perc = 99.9)
meth.min <- unite(filtered.myobj,min.per.group = 8L)
MI_Populations <- as(meth.min, "GRanges")
MI_Populations_chr <-assignChromosomeRegion(MI_Populations, nucleotideLevel=FALSE, 
                                            precedence=c("Promoters", "immediateDownstream", 
                                                         "fiveUTRs", "threeUTRs", 
                                                         "Exons", "Introns"), 
                                            TxDb=Cvirginica_txDB)

Z <- barplot(MI_Populations_chr$percentage, las=3,ylim=c(0,100),  main="MI Methylation distribution")
text(x = Z, y = MI_Populations_chr$percentage, label = MI_Populations_chr$percentage, pos = 3, cex = 0.8, col = "red")

MI_Populations_pie <- MI_Populations_chr$percentage

Names <- names(MI_Populations_pie)
pct <- round(MI_Populations_pie, digits = 3)
lbls <- paste(pct,"%",sep=" ") # ad % to labels 

par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
pie(MI_Populations_pie,
    labels=lbls,
    clockwise=TRUE,
    col=brewer.pal(7,"Set3"),
    border="white",
    radius=1,
    cex=0.8,
    main="MI Methylation distribution")
legend("bottomright",inset=c(-1.1,-.05), legend=Names,bty="n",ncol=1,fill=brewer.pal(7,"Set3"))


#Merging Fst with Gene Product Annotation with probe and all Diff_methylation_values


####RADseq

setwd("~/Dropbox/EpiGBS/New_stacks/CONSTRUCT/")

LF.LC <- read.delim("populations.fst_LC-LF.tsv")
LF.MI <- read.delim("populations.fst_LF-MI.tsv")
MI.LC <- read.delim("populations.fst_LC-MI.tsv")
SL.LC <- read.delim("populations.fst_LC-SL.tsv")
SL.LF <- read.delim("populations.fst_LF-SL.tsv")
SL.MI <- read.delim("populations.fst_MI-SL.tsv")

LF.LC$Pos <- paste(LF.LC$Chr,LF.LC$BP,sep="_")
LF.MI$Pos <- paste(LF.MI$Chr,LF.MI$BP,sep="_")
MI.LC$Pos <- paste(MI.LC$Chr,MI.LC$BP,sep="_")
SL.LC$Pos <- paste(SL.LC$Chr,SL.LC$BP,sep="_")
SL.LF$Pos <- paste(SL.LF$Chr,SL.LF$BP,sep="_")
SL.MI$Pos <- paste(SL.MI$Chr,SL.MI$BP,sep="_")

All_Fst_seqmonk <- read.delim("All_Fst_Seqmonk_annotations.txt")
All_Fst_seqmonk$Pos <- paste(All_Fst_seqmonk$Chromosome,All_Fst_seqmonk$Start,sep="_")

LF.LC.merge <- merge(LF.LC,All_Fst_seqmonk,by="Pos")
LF.MI.merge <- merge(LF.MI,All_Fst_seqmonk,by="Pos")
MI.LC.merge <- merge(MI.LC,All_Fst_seqmonk,by="Pos")
SL.LC.merge <- merge(SL.LC,All_Fst_seqmonk,by="Pos")
SL.LF.merge <- merge(SL.LF,All_Fst_seqmonk,by="Pos")
SL.MI.merge <- merge(SL.MI,All_Fst_seqmonk,by="Pos")

dim(LF.LC.merge)
#499
dim(LF.MI.merge)
#501
dim(MI.LC.merge)
#498
dim(SL.LC.merge)
#495
dim(SL.LF.merge)
#500
dim(SL.MI.merge)
#500

#Add product names to annotations
colnames(CV_Gene_Annotations_Final)[1] <- c("ID")
LF.LC.annot <- merge(LF.LC.merge,CV_Gene_Annotations_Final, by = "ID")
LF.MI.annot <- merge(LF.MI.merge,CV_Gene_Annotations_Final, by = "ID")
MI.LC.annot <- merge(MI.LC.merge,CV_Gene_Annotations_Final, by = "ID")
SL.LC.annot <- merge(SL.LC.merge,CV_Gene_Annotations_Final, by = "ID")
SL.LF.annot <- merge(SL.LF.merge,CV_Gene_Annotations_Final, by = "ID")
SL.MI.annot <- merge(SL.MI.merge,CV_Gene_Annotations_Final, by = "ID")

colnames(SL.MI.annot)
LF.LC_out <- LF.LC.annot[,c(1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,38)]
LF.MI.out <- LF.MI.annot[,c(1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,38)]
MI.LC.out <- MI.LC.annot[,c(1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,38)]
SL.LC.out <- SL.LC.annot[,c(1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,38)]
SL.LF.out <- SL.LF.annot[,c(1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,38)]
SL.MI.out <- SL.MI.annot[,c(1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,38)]

SLMI_nonsig_reduced <- SLMI_nonsig[,c(8,21)]
LFSL_nonsig_reduced <- LFSL_nonsig[,c(8,21)]
LFMI_nonsig_reduced <- LFMI_nonsig[,c(8,21)]
LCSL_nonsig_reduced <- LCSL_nonsig[,c(8,21)]
LCMI_nonsig_reduced <- LCMI_nonsig[,c(8,21)]
LCLF_nonsig_reduced <- LCLF_nonsig[,c(8,21)]

SLMI_meth_and_Fst <- merge(SLMI_nonsig_reduced,SL.MI.out,by="ID")
LFSL_meth_and_Fst <- merge(LFSL_nonsig_reduced,SL.LF.out,by="ID")
LFMI_meth_and_Fst <- merge(LFMI_nonsig_reduced,LF.MI.out,by="ID")
LCSL_meth_and_Fst <- merge(LCSL_nonsig_reduced,SL.LC.out,by="ID")
LCMI_meth_and_Fst <- merge(LCMI_nonsig_reduced,MI.LC.out,by="ID")
LCLF_meth_and_Fst <- merge(LCLF_nonsig_reduced,LF.LC_out,by="ID")

head(SLMI_meth_and_Fst)
dim(LFSL_meth_and_Fst)
dim(LFMI_meth_and_Fst)
dim(LCSL_meth_and_Fst)
dim(LCMI_meth_and_Fst)
dim(LCLF_meth_and_Fst)

SLMI_meth_and_Fst_reduce <- SLMI_meth_and_Fst[,c(1,2,10)]
LFSL_meth_and_Fst_reduce <- LFSL_meth_and_Fst[,c(1,2,10)]
LFMI_meth_and_Fst_reduce <- LFMI_meth_and_Fst[,c(1,2,10)]
LCSL_meth_and_Fst_reduce <- LCSL_meth_and_Fst[,c(1,2,10)]
LCMI_meth_and_Fst_reduce <- LCMI_meth_and_Fst[,c(1,2,10)]
LCLF_meth_and_Fst_reduce <- LCLF_meth_and_Fst[,c(1,2,10)]

All <- rbind(SLMI_meth_and_Fst_reduce,
             LFSL_meth_and_Fst_reduce,
             LFMI_meth_and_Fst_reduce,
             LCSL_meth_and_Fst_reduce,
             LCMI_meth_and_Fst_reduce,
             LCLF_meth_and_Fst_reduce)

head(All)
range(All$score.meth.diff)
plot(abs(All$score.meth.diff)~All$AMOVA.Fst)
plot(SLMI_meth_and_Fst$SLMI.score.meth.diff,SLMI_meth_and_Fst$AMOVA.Fst)
plot(LFSL_meth_and_Fst$LFSL.score.meth.diff,LFSL_meth_and_Fst$AMOVA.Fst)
plot(LFMI_meth_and_Fst$LFMI.score.meth.diff,LFMI_meth_and_Fst$AMOVA.Fst)
plot(LCSL_meth_and_Fst$LCSL.score.meth.diff,LCSL_meth_and_Fst$AMOVA.Fst)
plot(LCMI_meth_and_Fst$LCMI.score.meth.diff,LCMI_meth_and_Fst$AMOVA.Fst)
plot(LCLF_meth_and_Fst$LCLF.score.meth.diff,LCLF_meth_and_Fst$AMOVA.Fst)


###This identifies regions that are from low expression in popoulation 1 and higher expression in population 2 or vice-versa.

Pop_loci <- percMethylation(popStructur.Tiles,rowids = TRUE)
head(Pop_loci)

Pop_DMR <- getData(popSt.nonsig)
Pop_DMR$loci <- paste(Pop_DMR$chr,Pop_DMR$start,Pop_DMR$end,sep=".")
row.names(Pop_DMR) <- Pop_DMR$loci
Pop_DMR$loci  = NULL
Pop_DMR <- Pop_DMR[,c(5:7)]
head(Pop_DMR)

Pop_data <- merge(Pop_DMR,Pop_loci,by="row.names")
Pop_data_keep <- Pop_data$qvalue <= 0.05 & abs(Pop_data$meth.diff) >= 15
Pop_data_sig <- Pop_data[Pop_data_keep,]
colnames(Pop_data_sig) <- c("Row.names","pvalue","qvalue","meth.diff","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1",
                            "pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1",
                            "pop_1","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2",
                            "pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_1",
                            "pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_1",
                            "pop_1","pop_1","pop_1","pop_1","pop_1","pop_1","pop_2","pop_2","pop_2","pop_2","pop_2",
                            "pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2","pop_2")
colnames(Pop_data_sig)
dim(Pop_data_sig)
Pop_data_sig <- Pop_data_sig[,c(1:23,44:61,24:43,62:81)]
head(Pop_data_sig)
Pop_data_sig$pop_1_mean <- rowMeans(Pop_data_sig[,c(5:41)],na.rm=T)
Pop_data_sig$pop_2_mean <- rowMeans(Pop_data_sig[,c(42:81)],na.rm=T)
head(Pop_data_sig)
Pop_data_sig$mean_diff <- Pop_data_sig$pop_2_mean - Pop_data_sig$pop_1_mean
plot(Pop_data_sig$meth.diff~Pop_data_sig$mean_diff)

Pop_15_0 <- Pop_data_sig$pop_2_mean <=10 & Pop_data_sig$pop_1_mean >=25 |  Pop_data_sig$pop_1_mean <=10 & Pop_data_sig$pop_2_mean >=25
Pop_15_0 <- Pop_data_sig[Pop_15_0,]
head(Pop_15_0)
All_probes_annot$Row.names <- paste(All_probes_annot$Chromosome,All_probes_annot$Start,All_probes_annot$End,sep=".")
Pop_15_0_annot <- merge(Pop_15_0,All_probes_annot,by="Row.names")
View(Pop_15_0_annot)



##########THIS LOOKS AT Fst distribution

library(readxl)
library(readr)

setwd("~/Dropbox/EpiGBS/New_stacks/STRUCTURE_p2/")

LF_LC_Fst <- read.delim("populations.fst_LC-LF.tsv")
LF_MI_Fst <- read.delim("populations.fst_LF-MI.tsv")
MI_LC_Fst <- read.delim("populations.fst_LC-MI.tsv")
SL_LC_Fst <- read.delim("populations.fst_LC-SL.tsv")
SL_LF_Fst <- read.delim("populations.fst_LF-SL.tsv")
SL_MI_Fst <- read.delim("populations.fst_MI-SL.tsv")

LF_LC_Fst$Position <- paste(LF_LC_Fst$Chr,LF_LC_Fst$BP,sep="_")
LF_MI_Fst$Position <- paste(LF_MI_Fst$Chr,LF_MI_Fst$BP,sep="_")
MI_LC_Fst$Position <- paste(MI_LC_Fst$Chr,MI_LC_Fst$BP,sep="_")
SL_MI_Fst$Position <- paste(SL_MI_Fst$Chr,SL_MI_Fst$BP,sep="_")
SL_LC_Fst$Position <- paste(SL_LC_Fst$Chr,SL_LC_Fst$BP,sep="_")
SL_LF_Fst$Position <- paste(SL_LF_Fst$Chr,SL_LF_Fst$BP,sep="_")

LF_LC_Fst2 <- LF_LC_Fst[,c(18,8,14,15)]
LF_MI_Fst2 <- LF_MI_Fst[,c(18,8,14,15)]
MI_LC_Fst2 <- MI_LC_Fst[,c(18,8,14,15)]
SL_MI_Fst2 <- SL_MI_Fst[,c(18,8,14,15)]
SL_LC_Fst2 <- SL_LC_Fst[,c(18,8,14,15)]
SL_LF_Fst2 <- SL_LF_Fst[,c(18,8,14,15)]

dim(LF_LC_Fst2)
colnames(LF_LC_Fst2) <- c("Pos","LF_LC_AMOVA.fst","LF_LC_Corrected_AMOVA.fst","LF_LC_Smoothed_AMOVA.fst")
colnames(LF_MI_Fst2) <- c("Pos","LF_MI_AMOVA.fst","LF_MI_Corrected_AMOVA.fst","LF_MI_Smoothed_AMOVA.fst")
colnames(MI_LC_Fst2) <- c("Pos","MI_LC_AMOVA.fst","MI_LC_Corrected_AMOVA.fst","MI_LC_Smoothed_AMOVA.fst")
colnames(SL_MI_Fst2) <- c("Pos","SL_MI_AMOVA.fst","SL_MI_Corrected_AMOVA.fst","SL_MI_Smoothed_AMOVA.fst")
colnames(SL_LC_Fst2) <- c("Pos","SL_LC_AMOVA.fst","SL_LC_Corrected_AMOVA.fst","SL_LC_Smoothed_AMOVA.fst")
colnames(SL_LF_Fst2) <- c("Pos","SL_LF_AMOVA.fst","SL_LF_Corrected_AMOVA.fst","SL_LF_Smoothed_AMOVA.fst")


ALL_LC_Fst <- merge(LF_LC_Fst2,MI_LC_Fst2, by = "Pos",all=T)
colnames(ALL_LC_Fst)
ALL_LC_Fst2 <- merge(ALL_LC_Fst,SL_LC_Fst2, by = "Pos",all=T)
head(ALL_LC_Fst2)
LC_Fst_mean <-as.data.frame(ALL_LC_Fst2[,c(3,6,9)])
ALL_LC_Fst2$LC_mean_Fst <- rowMeans(LC_Fst_mean[sapply(LC_Fst_mean, is.numeric)],na.rm=T)
mean(ALL_LC_Fst2$LC_mean_Fst)
dim(ALL_LC_Fst2)

ALL_MI_Fst <- merge(LF_MI_Fst2,MI_LC_Fst2, by = "Pos",all=T)
colnames(ALL_MI_Fst)
ALL_MI_Fst2 <- merge(ALL_MI_Fst,SL_MI_Fst2, by = "Pos",all=T)
colnames(ALL_MI_Fst2)
MI_Fst_mean <-as.data.frame(ALL_MI_Fst2[,c(2,5,8)])
ALL_MI_Fst2$MI_mean_Fst <- rowMeans(MI_Fst_mean[sapply(MI_Fst_mean, is.numeric)],na.rm=T)
dim(ALL_MI_Fst2)

ALL_LF_Fst <- merge(LF_MI_Fst2,LF_LC_Fst2, by = "Pos",all=T)
colnames(ALL_LF_Fst)
ALL_LF_Fst2 <- merge(ALL_LF_Fst,SL_LF_Fst2, by = "Pos",all=T)
colnames(ALL_MI_Fst2)
LF_Fst_mean <-as.data.frame(ALL_LF_Fst2[,c(2,5,8)])
ALL_LF_Fst2$LF_mean_Fst <- rowMeans(LF_Fst_mean[sapply(LF_Fst_mean, is.numeric)],na.rm=T)
dim(ALL_LF_Fst2)


ALL_SL_Fst <- merge(SL_LC_Fst2,SL_LF_Fst2, by = "Pos",all=T)
colnames(ALL_SL_Fst)
ALL_SL_Fst2 <- merge(ALL_SL_Fst,SL_MI_Fst2, by = "Pos",all=T)
colnames(ALL_SL_Fst2)
SL_Fst_mean <-as.data.frame(ALL_SL_Fst2[,c(2,5,8)])
ALL_SL_Fst2$SL_mean_Fst <- rowMeans(SL_Fst_mean[sapply(SL_Fst_mean, is.numeric)],na.rm=T)
dim(ALL_SL_Fst2)


All <- merge(ALL_LC_Fst2,ALL_MI_Fst2, by = "Pos",all=T)
colnames(All)
ALl <- merge(All,ALL_LF_Fst2, by = "Pos",all=T)
colnames(ALl)
ALL2 <- merge(ALl,ALL_SL_Fst2, by = "Pos",all=T)

colnames(ALL2)
dim(ALL2)
temp <- ALL2
colnames(temp)
Fst_reduced <- temp[,c(1,3,6,9,13,29,39)]
colnames(Fst_reduced)
colnames(Fst_reduced) <- c("Pos","LF_LC_Corrected_AMOVA.fst","MI_LC_Corrected_AMOVA.fst","SL_LC_Corrected_AMOVA.fst",
                           "LF_MI_Corrected_AMOVA.fst","SL_LF_Corrected_AMOVA.fst","SL_MI_Corrected_AMOVA.fst"  )

head(Fst_reduced)
Fst_reduced$Fst_mean <- apply(Fst_reduced[,c(2:7)],1,mean,na.rm=T)

Fst_reduced2 = Fst_reduced[!duplicated(Fst_reduced$Pos),]
Fst_reduced2_keep <- complete.cases(Fst_reduced2)
Fst_reduced2 <- Fst_reduced2[Fst_reduced2_keep,]

dim(Fst_reduced2)
head(Fst_reduced2)


All_Fst_Seqmonk_annotations <- read.delim("~/Dropbox/EpiGBS/New_stacks/CONSTRUCT/All_Fst_Seqmonk_annotations.txt")
head(All_Fst_Seqmonk_annotations)
head(Fst_reduced2)
All_Fst_Seqmonk_annotations$Pos <- paste(All_Fst_Seqmonk_annotations$Chromosome,All_Fst_Seqmonk_annotations$Start,sep="_")
Fst_reduced3 <- merge(Fst_reduced2,All_Fst_Seqmonk_annotations,by="Pos")
dim(Fst_reduced3)


#Calculate Pst
EpiGBS_out_for_Pst <- percMethylation(popStructur.Tiles,rowids=T)
dim(EpiGBS_out_for_Pst)              
colnames(EpiGBS_out_for_Pst)

CV_Gene_Annotations_Final <- read.delim("~/Dropbox/Kyle_TagSeq/CV_Gene_Annotations_Final.txt")
colnames(CV_Gene_Annotations_Final)[1] <- c("ID")
library(readr)
All_probes <- read_delim("~/Dropbox/EpiGBS/METHYLKIT_FINAL_OUT/All_probes_Seqmonk.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
All_probes <- as.data.frame(All_probes)
dim(All_probes)
#7433 12
All_probes$Positon <- paste(All_probes$Chromosome,All_probes$Start,All_probes$End, sep = ".")
row.names(All_probes) <- All_probes$Positon
EpiGBS_out_for_Pst_annot <- merge(EpiGBS_out_for_Pst,All_probes,by="row.names")
colnames(EpiGBS_out_for_Pst_annot)
LC <-  EpiGBS_out_for_Pst_annot[,c(2:20)]
MI <-  EpiGBS_out_for_Pst_annot[,c(59:78)]
LF <-  EpiGBS_out_for_Pst_annot[,c(21:40)]
SL <-  EpiGBS_out_for_Pst_annot[,c(41:58)]

LCLF_all <-  EpiGBS_out_for_Pst_annot[,c(2:20,21:40)]
LCMI_all <-  EpiGBS_out_for_Pst_annot[,c(2:20,59:78)]
LCSL_all <-  EpiGBS_out_for_Pst_annot[,c(2:20,41:58)]
LFSL_all <-  EpiGBS_out_for_Pst_annot[,c(21:40,41:58)]
LFMI_all <-  EpiGBS_out_for_Pst_annot[,c(21:40,59:78)]
SLMI_all <-  EpiGBS_out_for_Pst_annot[,c(41:58,59:78)]

LC_mean <- apply(LC,1,mean,na.rm=T)
LC_mean <- LC_mean/100
range(LC_mean,na.rm = T)
MI_mean <- apply(MI,1,mean,na.rm=T)
MI_mean <- MI_mean/100
range(MI_mean,na.rm = T)
LF_mean <- apply(LF,1,mean,na.rm=T)
LF_mean <- LF_mean/100
range(LF_mean,na.rm = T)
SL_mean <- apply(SL,1,mean,na.rm=T)
SL_mean <- SL_mean/100
range(SL_mean,na.rm = T)

LCLF_all_mean <- apply(LCLF_all,1,mean,na.rm=T)
LCMI_all_mean <- apply(LCMI_all,1,mean,na.rm=T)
LCSL_all_mean <- apply(LCSL_all,1,mean,na.rm=T)
LFSL_all_mean <- apply(LFSL_all,1,mean,na.rm=T)
LFMI_all_mean <- apply(LFMI_all,1,mean,na.rm=T)
SLMI_all_mean <- apply(SLMI_all,1,mean,na.rm=T)

LCLF_all_mean <- LCLF_all_mean/100
LCMI_all_mean <- LCMI_all_mean/100
LCSL_all_mean <- LCSL_all_mean/100
LFSL_all_mean <- LFSL_all_mean/100
LFMI_all_mean <- LFMI_all_mean/100
SLMI_all_mean <- SLMI_all_mean/100

Info <- EpiGBS_out_for_Pst_annot[,c(1,80:91)]
LCLF_Pst <- cbind(Info,LC_mean,LCLF_all_mean)
LCLF_Pst <- as.data.frame(LCLF_Pst)
LCLF_Pst$LCLF_Pst <- ((LCLF_Pst$LCLF_all_mean-LCLF_Pst$LC_mean)/(LCLF_Pst$LCLF_all_mean))
LCLF_Pst2 <- LCLF_Pst
LCLF_Pst2$LCLF_Pst[LCLF_Pst2$LCLF_Pst < 0] <- 0
LCLF_Pst2_keep <- LCLF_Pst2$LCLF_Pst < 1
LCLF_Pst3 <- LCLF_Pst2[LCLF_Pst2_keep,]
dim(LCLF_Pst2)
dim(LCLF_Pst3)
LCLF_Pst4 = LCLF_Pst3[order(LCLF_Pst3[,'Positon'],LCLF_Pst3[,'LCLF_Pst']),]
dim(LCLF_Pst4)
LCLF_Pst4 = LCLF_Pst4[!duplicated(LCLF_Pst4$Positon),]
dim(LCLF_Pst4)
mean(LCLF_Pst4$LCLF_Pst,na.rm=T)
hist(LCLF_Pst4$LCLF_Pst, main = "Lake Calcasieu - Lake Fortuna mean Pst = 0.1003737",breaks= 10)

LCMI_Pst <- cbind(Info,LC_mean,LCMI_all_mean)
LCMI_Pst <- as.data.frame(LCMI_Pst)
LCMI_Pst$LCMI_Pst <- ((LCMI_Pst$LCMI_all_mean-LCMI_Pst$LC_mean)/(LCMI_Pst$LCMI_all_mean))
LCMI_Pst2 <- LCMI_Pst
LCMI_Pst2$LCMI_Pst[LCMI_Pst2$LCMI_Pst < 0] <- 0
LCMI_Pst2_keep <- LCMI_Pst2$LCMI_Pst < 1
LCMI_Pst3 <- LCMI_Pst2[LCMI_Pst2_keep,]
dim(LCMI_Pst2)
dim(LCMI_Pst3)
LCMI_Pst4 = LCMI_Pst3[order(LCMI_Pst3[,'Positon'],LCMI_Pst3[,'LCMI_Pst']),]
dim(LCMI_Pst4)
LCMI_Pst4 = LCMI_Pst4[!duplicated(LCMI_Pst4$Positon),]
dim(LCMI_Pst4)
mean(LCMI_Pst4$LCMI_Pst,na.rm=T)
hist(LCMI_Pst4$LCMI_Pst, main = "Lake Calcasieu - Lake Fortuna mean Pst = 0.1266581",breaks= 10)

LCSL_Pst <- cbind(Info,LC_mean,LCSL_all_mean)
LCSL_Pst <- as.data.frame(LCSL_Pst)
LCSL_Pst$LCSL_Pst <- ((LCSL_Pst$LCSL_all_mean-LCSL_Pst$LC_mean)/(LCSL_Pst$LCSL_all_mean))
LCSL_Pst2 <- LCSL_Pst
head(LCSL_Pst2)
LCSL_Pst2$LCSL_Pst[LCSL_Pst2$LCSL_Pst < 0] <- 0
LCSL_Pst2_keep <- LCSL_Pst2$LCSL_Pst < 1
LCSL_Pst3 <- LCSL_Pst2[LCSL_Pst2_keep,]
dim(LCSL_Pst2)
dim(LCSL_Pst3)
LCSL_Pst4 = LCSL_Pst3[order(LCSL_Pst3[,'Positon'],LCSL_Pst3[,'LCSL_Pst']),]
dim(LCSL_Pst4)
LCSL_Pst4 = LCSL_Pst4[!duplicated(LCSL_Pst4$Positon),]
dim(LCSL_Pst4)
mean(LCSL_Pst4$LCSL_Pst,na.rm=T)
hist(LCSL_Pst4$LCSL_Pst, main = "Lake Calcasieu - Lake Fortuna mean Pst = 0.1039501",breaks= 10)

LFSL_Pst <- cbind(Info,LF_mean,LFSL_all_mean)
LFSL_Pst <- as.data.frame(LFSL_Pst)
LFSL_Pst$LFSL_Pst <- ((LFSL_Pst$LFSL_all_mean-LFSL_Pst$LF_mean)/(LFSL_Pst$LFSL_all_mean))
LFSL_Pst2 <- LFSL_Pst
LFSL_Pst2$LFSL_Pst[LFSL_Pst2$LFSL_Pst < 0] <- 0
LFSL_Pst2_keep <- LFSL_Pst2$LFSL_Pst < 1
LFSL_Pst3 <- LFSL_Pst2[LFSL_Pst2_keep,]
dim(LFSL_Pst2)
dim(LFSL_Pst3)
LFSL_Pst4 = LFSL_Pst3[order(LFSL_Pst3[,'Positon'],LFSL_Pst3[,'LFSL_Pst']),]
dim(LFSL_Pst4)
LFSL_Pst4 = LFSL_Pst4[!duplicated(LFSL_Pst4$Positon),]
dim(LFSL_Pst4)
mean(LFSL_Pst4$LFSL_Pst,na.rm=T)
hist(LFSL_Pst4$LFSL_Pst, main = "Lake Calcasieu - Lake Fortuna mean Pst = 0.0996934",breaks= 10)

LFMI_Pst <- cbind(Info,LF_mean,LFMI_all_mean)
LFMI_Pst <- as.data.frame(LFMI_Pst)
LFMI_Pst$LFMI_Pst <- ((LFMI_Pst$LFMI_all_mean-LFMI_Pst$LF_mean)/(LFMI_Pst$LFMI_all_mean))
LFMI_Pst2 <- LFMI_Pst
LFMI_Pst2$LFMI_Pst[LFMI_Pst2$LFMI_Pst < 0] <- 0
LFMI_Pst2_keep <- LFMI_Pst2$LFMI_Pst < 1
LFMI_Pst3 <- LFMI_Pst2[LFMI_Pst2_keep,]
dim(LFMI_Pst2)
dim(LFMI_Pst3)
LFMI_Pst4 = LFMI_Pst3[order(LFMI_Pst3[,'Positon'],LFMI_Pst3[,'LFMI_Pst']),]
dim(LFMI_Pst4)
LFMI_Pst4 = LFMI_Pst4[!duplicated(LFMI_Pst4$Positon),]
dim(LFMI_Pst4)
mean(LFMI_Pst4$LFMI_Pst,na.rm=T)
hist(LFMI_Pst4$LFMI_Pst, main = "Lake Calcasieu - Lake Fortuna mean Pst = 0.125229",breaks= 10)

SLMI_Pst <- cbind(Info,SL_mean,SLMI_all_mean)
SLMI_Pst <- as.data.frame(SLMI_Pst)
SLMI_Pst$SLMI_Pst <- ((SLMI_Pst$SLMI_all_mean-SLMI_Pst$SL_mean)/(SLMI_Pst$SLMI_all_mean))
SLMI_Pst2 <- SLMI_Pst
SLMI_Pst2$SLMI_Pst[SLMI_Pst2$SLMI_Pst < 0] <- 0
SLMI_Pst2_keep <- SLMI_Pst2$SLMI_Pst < 1
SLMI_Pst3 <- SLMI_Pst2[SLMI_Pst2_keep,]
dim(SLMI_Pst2)
dim(SLMI_Pst3)
SLMI_Pst4 = SLMI_Pst3[order(SLMI_Pst3[,'Positon'],SLMI_Pst3[,'SLMI_Pst']),]
dim(SLMI_Pst4)
SLMI_Pst4 = SLMI_Pst4[!duplicated(SLMI_Pst4$Positon),]
dim(SLMI_Pst4)
mean(SLMI_Pst4$SLMI_Pst,na.rm=T)
hist(SLMI_Pst4$SLMI_Pst, main = "Lake Calcasieu - Lake Fortuna mean Pst = 0.1096666",breaks= 10)

LCLF.Pst <- mean(LCLF_Pst4$LCLF_Pst,na.rm=T)
LCMI.Pst <- mean(LCMI_Pst4$LCMI_Pst,na.rm=T)
LCSL.Pst <- mean(LCSL_Pst4$LCSL_Pst,na.rm=T)
LFSL.Pst <- mean(LFSL_Pst4$LFSL_Pst,na.rm=T)
LFMI.Pst <- mean(LFMI_Pst4$LFMI_Pst,na.rm=T)
SLMI.Pst <- mean(SLMI_Pst4$SLMI_Pst,na.rm=T)

Pop_Pst <- merge(LCLF_Pst4,LCMI_Pst4,by = "Positon")
colnames(Pop_Pst)
Pop_Pst <- Pop_Pst[,c(1:12,16,31)]
head(Pop_Pst)
Pop_Pst <- merge(Pop_Pst,LCSL_Pst4, by = "Positon")
head(Pop_Pst)
Pop_Pst <- Pop_Pst[,c(1:14,29)]
head(Pop_Pst)
Pop_Pst <- merge(Pop_Pst,LFSL_Pst4, by = "Positon")
Pop_Pst <- Pop_Pst[,c(1:15,30)]
head(Pop_Pst)
Pop_Pst <- merge(Pop_Pst,LFMI_Pst4, by = "Positon")
Pop_Pst <- Pop_Pst[,c(1:16,31)]
head(Pop_Pst)
Pop_Pst <- merge(Pop_Pst,SLMI_Pst4, by = "Positon")
Pop_Pst <- Pop_Pst[,c(1:17,32)]
dim(Pop_Pst)

Pop_Pst$LC_mean_Pst <- rowMeans(Pop_Pst[,c(13:15)],na.rm=T)
Pop_Pst$LF_mean_Pst <- rowMeans(Pop_Pst[,c(13,16,17)],na.rm=T)
Pop_Pst$SL_mean_Pst <- rowMeans(Pop_Pst[,c(15,17,18)],na.rm=T)
Pop_Pst$MI_mean_Pst <- rowMeans(Pop_Pst[,c(14,17,18)],na.rm=T)
dim(Fst_reduced3)
Fst_reduced3$LF_mean_Fst <- apply(Fst_reduced3[,c(2,5,6)],1,mean,na.rm=T)
Fst_reduced3$LC_mean_Fst <- apply(Fst_reduced3[,c(2,3,4)],1,mean,na.rm=F)
Fst_reduced3$MI_mean_Fst <- apply(Fst_reduced3[,c(3,5,7)],1,mean,na.rm=F)
Fst_reduced3$SL_mean_Fst <- apply(Fst_reduced3[,c(4,6,7)],1,mean,na.rm=F)
head(Fst_reduced3)
colnames(Pop_Pst)[8] <- c("ID")
Pst_and_Fst <- merge(Fst_reduced3,Pop_Pst,by="ID")
head(Pop_Pst)

dim(Pst_and_Fst)
mean(Pst_and_Fst$MI_mean_Fst,na.rm=T)

par(mfrow=c(2,2))
plot(Pst_and_Fst$SL_mean_Pst,Pst_and_Fst$SL_mean_Fst,xlim=c(0,.8), ylim=c(0,0.5),xlab="SL mean Pst",ylab="SL mean Fst",main="Sister Lake")
points(0.1017267,0.01793079,col='red',pch=16)
plot(Pst_and_Fst$LF_mean_Pst,Pst_and_Fst$LF_mean_Fst,xlim=c(0,.8), ylim=c(0,0.5),xlab="LF mean Pst",ylab="LF mean Fst",main="Lake Fortuna")
points(0.09812395,0.02052339,col='red',pch=16)
plot(Pst_and_Fst$LC_mean_Pst,Pst_and_Fst$LC_mean_Fst,xlim=c(0,1), ylim=c(0,0.5),xlab="LC mean Pst",ylab="LC mean Fst",,main="Lake Calcasieu")
points(0.09982124,0.01673983,col='red',pch=16)
plot(Pst_and_Fst$MI_mean_Pst,Pst_and_Fst$MI_mean_Fst,xlim=c(0,1), ylim=c(0,0.5),xlab="VB mean Pst",ylab="VB mean Fst",main="Vermillion Bay")
points(0.1096192,0.01627589,col='red',pch=16)

Pst <- rowMeans(Pst_and_Fst[,c(36:41)],na.rm=T)
mean(Pst)

Fst <- rowMeans(Pst_and_Fst[,c(3:8)],na.rm=T)
mean(Fst)
par(mar=c(5.1,5.1,4.1,2.1))
plot(Pst_and_Fst$SL_mean_Pst,Pst_and_Fst$SL_mean_Fst,xlim=c(0,1), ylim=c(0,0.5),xlab="Pst",ylab="Fst",cex.lab=1.5,cex.axis=1.5)
points(Pst_and_Fst$LF_mean_Pst,Pst_and_Fst$LF_mean_Fst)
points(Pst_and_Fst$LC_mean_Pst,Pst_and_Fst$LC_mean_Fst)
points(Pst_and_Fst$MI_mean_Pst,Pst_and_Fst$MI_mean_Fst)
points(mean(Pst),mean(Fst),col='red',pch=20,cex=1.5)
abline(v=mean(Pst),col='grey20',lty=2)
abline(v=mean(Pst),col='grey20',lty=2)



# GO_MWU uses continuous measure of significance (such as fold-change or -log(p-value) ) to identify GO categories that are significantly enriches with either up- or down-regulated genes. The advantage - no need to impose arbitrary significance cutoff.

# If the measure is binary (0 or 1) the script will perform a typical "GO enrichment" analysis based Fisher's exact test: it will show GO categories over-represented among the genes that have 1 as their measure. 

# On the plot, different fonts are used to indicate significance and color indicates enrichment with either up (red) or down (blue) regulated genes. No colors are shown for binary measure analysis.

# The tree on the plot is hierarchical clustering of GO categories based on shared genes. Categories with no branch length between them are subsets of each other.

# The fraction next to GO category name indicates the fracton of "good" genes in it; "good" genes being the ones exceeding the arbitrary absValue cutoff (option in gomwuPlot). For Fisher's based test, specify absValue=0.5. This value does not affect statistics and is used for plotting only.

# Stretch the plot manually to match tree to text

# Mikhail V. Matz, UT Austin, February 2015; matz@utexas.edu

################################################################
# First, press command-D on mac or ctrl-shift-H in Rstudio and navigate to the directory containing scripts and input files. Then edit, mark and execute the following bits of code, one after another.
getwd()
setwd("/Users/Kevin_Work_Mac/Dropbox/EpiGBS/METHYLKIT_FINAL_OUT/GO_MWU/")

#PopSt_nonsig_GeneBody_GO_MWU.csv
#MF 1
#BP 0
#CC 0
#LCLF_nonsig_GeneBody_GO_MWU.csv
#MF 0
#BP 0
#CC 0
#LCMI_nonsig_GeneBody_GO_MWU.csv
#MF 0
#BP 0
#CC 0
#LCSL_nonsig_GeneBody_GO_MWU.csv
#MF 0
#BP 0
#CC 0
#LFMI_nonsig_GeneBody_GO_MWU.csv
#MF 0
#BP 0
#CC 1
#LFSL_nonsig_GeneBody_GO_MWU.csv
#MF 0
#BP 0
#CC 0
#SLMI_nonsig_GeneBody_GO_MWU.csv
#MF 0
#BP 0
#CC 1


input="SLMI_nonsig_GeneBody_GO_MWU.csv" # two columns of comma-separated values: gene id, continuous measure of significance. To perform standard GO enrichment analysis based on Fisher's exact test, use binary measure (0 or 1, i.e., either sgnificant or not).
goAnnotations="GO_MWU_background_pairwise_GeneBody.tab" # two-column, tab-delimited, one line per gene, multiple GO terms separated by semicolon. If you have multiple lines per gene, use nrify_GOtable.pl prior to running this script.
goDatabase="go.obo" # download from http://www.geneontology.org/GO.downloads.ontology.shtml
goDivision="CC" # either MF, or BP, or CC
source("gomwu.functions.R")


# Calculating stats. It might take ~3 min for MF and BP. Do not rerun it if you just want to replot the data with different cutoffs, go straight to gomwuPlot. If you change any of the numeric values below, delete the files that were generated in previos runs first.
gomwuStats(input, goDatabase, goAnnotations, goDivision,
           perlPath="perl", # replace with full path to perl executable if it is not in your system's PATH already
           largest=0.1,  # a GO category will not be considered if it contains more than this fraction of the total number of genes
           smallest=3,   # a GO category should contain at least this many genes to be considered
           clusterCutHeight=0.25, # threshold for merging similar (gene-sharing) terms. See README for details.
           #	Alternative="g" # by default the MWU test is two-tailed; specify "g" or "l" of you want to test for "greater" or "less" instead. 
           #	Module=TRUE,Alternative="g" # un-remark this if you are analyzing a SIGNED WGCNA moduSle (values: 0 for not in module genes, kME for in-module genes). In the call to gomwuPlot below, specify absValue=0.001 (count number of "good genes" that fall into the module)
           #	Module=TRUE # un-remark this if you are analyzing an UNSIGNED WGCNA module 
)
